{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar initialState = {\n  data: [],\n  allData: [],\n  filteredData: [],\n  providerData: [],\n  types: [],\n  settype: {\n    label: \"ALL\",\n    value: 'All'\n  },\n  setprovider: [],\n  moredata: []\n};\nvar DataListReducer = function DataListReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"LIVECASINO_GET_ALL_DATA\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allData: action.data,\n        data: action.data\n      });\n    case \"LIVECASINO_GET_DATA\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.data\n      });\n    case \"LIVECASINO_FILTER_DATA\":\n      var value = action.value;\n      var filteredData = [];\n      if (value.length) {\n        filteredData = state.allData.filter(function (item) {\n          var startsWithCondition = item.NAME.toLowerCase().startsWith(value.toLowerCase()) || item.TYPE.toLowerCase().startsWith(value.toLowerCase());\n          var includesCondition = item.NAME.toLowerCase().includes(value.toLowerCase()) || item.TYPE.toLowerCase().startsWith(value.toLowerCase());\n          if (startsWithCondition) {\n            return startsWithCondition;\n          } else if (!startsWithCondition && includesCondition) {\n            return includesCondition;\n          } else return null;\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filteredData: filteredData\n        });\n      } else {\n        filteredData = state.data;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filteredData: filteredData\n        });\n      }\n    case \"LIVECASINO_TYPES\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        types: action.data\n      });\n    case \"LIVECASINO_TYPE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        settype: action.data\n      });\n    case \"LIVECASINO_SETPROVIDER\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        setprovider: action.setprovider\n      });\n    case \"LIVECASINO_PROVIDER\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        providerData: action.data,\n        moredata: action.moredata,\n        setprovider: [action.data[0]]\n      });\n    default:\n      return state;\n  }\n};\nexport default DataListReducer;","map":{"version":3,"names":["initialState","data","allData","filteredData","providerData","types","settype","label","value","setprovider","moredata","DataListReducer","state","arguments","length","undefined","action","type","_objectSpread","filter","item","startsWithCondition","NAME","toLowerCase","startsWith","TYPE","includesCondition","includes"],"sources":["C:/Users/adamk/Downloads/kasino9/src/redux/reducers/livecasino/index.jsx"],"sourcesContent":["\nconst initialState = {\n    data: [],\n    allData: [],\n    filteredData: [],\n    providerData : [],\n    types : [],\n    settype : {label : \"ALL\",value : 'All'},\n    setprovider : [],\n    moredata : []\n  }\n  \n  const DataListReducer = (state = initialState, action) => {\n    switch (action.type) {\n      \n      case \"LIVECASINO_GET_ALL_DATA\":\n        return {\n          ...state,\n          allData: action.data,\n          data : action.data\n        }\n        case \"LIVECASINO_GET_DATA\":\n        return {\n          ...state,\n          data: action.data,\n        }\n      case \"LIVECASINO_FILTER_DATA\":\n        let value = action.value;\n        let filteredData = []\n        if (value.length) {\n          filteredData = state.allData\n            .filter(item => {\n              let startsWithCondition =\n                item.NAME.toLowerCase().startsWith(value.toLowerCase()) ||\n                item.TYPE.toLowerCase().startsWith(value.toLowerCase()) \n\n              let includesCondition =\n                item.NAME.toLowerCase().includes(value.toLowerCase()) ||\n                item.TYPE.toLowerCase().startsWith(value.toLowerCase()) \n  \n              if (startsWithCondition) {\n                return startsWithCondition\n              } else if (!startsWithCondition && includesCondition) {\n                return includesCondition\n              } else return null\n            })\n          return { ...state, filteredData }\n        } else {\n          filteredData = state.data\n          return { ...state, filteredData }\n        }\n\n      case \"LIVECASINO_TYPES\":\n      return {...state,types : action.data }\n      case \"LIVECASINO_TYPE\":\n      return {...state,settype : action.data }\n      case \"LIVECASINO_SETPROVIDER\" :\n        return {...state,setprovider : action.setprovider}\n      case \"LIVECASINO_PROVIDER\" :\n        return {...state,providerData : action.data,moredata : action.moredata,setprovider :[action.data[0]]}\n      default:\n        return state\n    }\n  }\n  \n  export default DataListReducer\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}