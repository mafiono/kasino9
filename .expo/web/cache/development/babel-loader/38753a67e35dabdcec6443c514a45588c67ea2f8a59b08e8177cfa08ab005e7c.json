{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Animated from 'react-native-reanimated';\nvar event = Animated.event,\n  divide = Animated.divide,\n  onChange = Animated.onChange,\n  cond = Animated.cond,\n  eq = Animated.eq,\n  round = Animated.round,\n  call = Animated.call,\n  Value = Animated.Value;\nvar ScrollPager = function (_React$Component) {\n  _inherits(ScrollPager, _React$Component);\n  var _super = _createSuper(ScrollPager);\n  function ScrollPager() {\n    var _this;\n    _classCallCheck(this, ScrollPager);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"initialOffset\", {\n      x: _this.props.navigationState.index * _this.props.layout.width,\n      y: 0\n    });\n    _defineProperty(_assertThisInitialized(_this), \"wasTouched\", false);\n    _defineProperty(_assertThisInitialized(_this), \"interactionHandle\", null);\n    _defineProperty(_assertThisInitialized(_this), \"scrollViewRef\", React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"jumpTo\", function (key) {\n      _this.wasTouched = false;\n      var _this$props = _this.props,\n        navigationState = _this$props.navigationState,\n        keyboardDismissMode = _this$props.keyboardDismissMode,\n        onIndexChange = _this$props.onIndexChange;\n      var index = navigationState.routes.findIndex(function (route) {\n        return route.key === key;\n      });\n      if (navigationState.index === index) {\n        _this.scrollTo(index * _this.props.layout.width);\n      } else {\n        onIndexChange(index);\n        if (keyboardDismissMode === 'auto') {\n          Keyboard.dismiss();\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"scrollTo\", function (x) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (_this.scrollViewRef.current) {\n        var _this$scrollViewRef$c, _this$scrollViewRef$c2;\n        var scrollView = typeof ((_this$scrollViewRef$c = _this.scrollViewRef.current) === null || _this$scrollViewRef$c === void 0 ? void 0 : _this$scrollViewRef$c.scrollTo) === 'function' ? _this.scrollViewRef.current : (_this$scrollViewRef$c2 = _this.scrollViewRef.current) === null || _this$scrollViewRef$c2 === void 0 ? void 0 : _this$scrollViewRef$c2.getNode();\n        scrollView === null || scrollView === void 0 ? void 0 : scrollView.scrollTo({\n          x: x,\n          animated: animated\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"enterListeners\", []);\n    _defineProperty(_assertThisInitialized(_this), \"addListener\", function (type, listener) {\n      switch (type) {\n        case 'enter':\n          _this.enterListeners.push(listener);\n          break;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"removeListener\", function (type, listener) {\n      switch (type) {\n        case 'enter':\n          {\n            var index = _this.enterListeners.indexOf(listener);\n            if (index > -1) {\n              _this.enterListeners.splice(index, 1);\n            }\n            break;\n          }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"position\", new Animated.Value(_this.props.navigationState.index * _this.props.layout.width));\n    _defineProperty(_assertThisInitialized(_this), \"onScroll\", event([{\n      nativeEvent: {\n        contentOffset: {\n          x: _this.position\n        }\n      }\n    }]));\n    _defineProperty(_assertThisInitialized(_this), \"layoutWidthNode\", new Value(_this.props.layout.width));\n    _defineProperty(_assertThisInitialized(_this), \"relativePosition\", divide(_this.position, _this.layoutWidthNode));\n    return _this;\n  }\n  _createClass(ScrollPager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.layout.width) {\n        this.scrollTo(this.props.navigationState.index * this.props.layout.width, false);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var offset = this.props.navigationState.index * this.props.layout.width;\n      if (prevProps.navigationState.routes.length !== this.props.navigationState.routes.length || prevProps.layout.width !== this.props.layout.width) {\n        this.scrollTo(offset, false);\n      } else if (prevProps.navigationState.index !== this.props.navigationState.index) {\n        this.scrollTo(offset);\n      }\n      if (prevProps.layout.width !== this.props.layout.width) {\n        this.layoutWidthNode.setValue(this.props.layout.width);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interactionHandle !== null) {\n        InteractionManager.clearInteractionHandle(this.interactionHandle);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props2 = this.props,\n        children = _this$props2.children,\n        layout = _this$props2.layout,\n        onSwipeStart = _this$props2.onSwipeStart,\n        onSwipeEnd = _this$props2.onSwipeEnd,\n        overscroll = _this$props2.overscroll,\n        onIndexChange = _this$props2.onIndexChange,\n        navigationState = _this$props2.navigationState;\n      var handleSwipeStart = function handleSwipeStart() {\n        _this2.wasTouched = false;\n        onSwipeStart === null || onSwipeStart === void 0 ? void 0 : onSwipeStart();\n        _this2.interactionHandle = InteractionManager.createInteractionHandle();\n      };\n      var handleSwipeEnd = function handleSwipeEnd() {\n        _this2.wasTouched = true;\n        onSwipeEnd === null || onSwipeEnd === void 0 ? void 0 : onSwipeEnd();\n        if (_this2.interactionHandle !== null) {\n          InteractionManager.clearInteractionHandle(_this2.interactionHandle);\n        }\n      };\n      return children({\n        position: this.relativePosition,\n        addListener: this.addListener,\n        removeListener: this.removeListener,\n        jumpTo: this.jumpTo,\n        render: function render(children) {\n          return React.createElement(Animated.ScrollView, {\n            pagingEnabled: true,\n            directionalLockEnabled: true,\n            keyboardDismissMode: \"on-drag\",\n            keyboardShouldPersistTaps: \"always\",\n            overScrollMode: \"never\",\n            scrollToOverflowEnabled: true,\n            scrollEnabled: _this2.props.swipeEnabled,\n            automaticallyAdjustContentInsets: false,\n            bounces: overscroll,\n            scrollsToTop: false,\n            showsHorizontalScrollIndicator: false,\n            scrollEventThrottle: 1,\n            onScroll: _this2.onScroll,\n            onScrollBeginDrag: handleSwipeStart,\n            onScrollEndDrag: handleSwipeEnd,\n            onMomentumScrollEnd: _this2.onScroll,\n            contentOffset: _this2.initialOffset,\n            style: styles.container,\n            contentContainerStyle: layout.width ? {\n              flexDirection: 'row',\n              width: layout.width * navigationState.routes.length,\n              flex: 1\n            } : null,\n            ref: _this2.scrollViewRef\n          }, children, React.createElement(Animated.Code, {\n            exec: onChange(_this2.relativePosition, cond(eq(round(_this2.relativePosition), _this2.relativePosition), [call([_this2.relativePosition], function (_ref) {\n              var _ref2 = _slicedToArray(_ref, 1),\n                relativePosition = _ref2[0];\n              if (_this2.wasTouched) {\n                onIndexChange(relativePosition);\n                _this2.wasTouched = false;\n              }\n            })]))\n          }));\n        }\n      });\n    }\n  }]);\n  return ScrollPager;\n}(React.Component);\nexport { ScrollPager as default };\n_defineProperty(ScrollPager, \"defaultProps\", {\n  bounces: true\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Keyboard","InteractionManager","Animated","event","divide","onChange","cond","eq","round","call","Value","ScrollPager","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","apply","concat","_defineProperty","_assertThisInitialized","x","props","navigationState","index","layout","width","y","createRef","key","wasTouched","_this$props","keyboardDismissMode","onIndexChange","routes","findIndex","route","scrollTo","dismiss","animated","undefined","scrollViewRef","current","_this$scrollViewRef$c","_this$scrollViewRef$c2","scrollView","getNode","type","listener","enterListeners","push","indexOf","splice","nativeEvent","contentOffset","position","layoutWidthNode","_createClass","value","componentDidMount","componentDidUpdate","prevProps","offset","setValue","componentWillUnmount","interactionHandle","clearInteractionHandle","render","_this2","_this$props2","children","onSwipeStart","onSwipeEnd","overscroll","handleSwipeStart","createInteractionHandle","handleSwipeEnd","relativePosition","addListener","removeListener","jumpTo","createElement","ScrollView","pagingEnabled","directionalLockEnabled","keyboardShouldPersistTaps","overScrollMode","scrollToOverflowEnabled","scrollEnabled","swipeEnabled","automaticallyAdjustContentInsets","bounces","scrollsToTop","showsHorizontalScrollIndicator","scrollEventThrottle","onScroll","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollEnd","initialOffset","style","styles","container","contentContainerStyle","flexDirection","flex","ref","Code","exec","_ref","_ref2","_slicedToArray","Component","default","create"],"sources":["C:\\Users\\adamk\\Downloads\\kasino9\\node_modules\\react-native-tab-view\\lib\\module\\ScrollPager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Keyboard, InteractionManager } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { Props } from './Pager';\nimport { Route, Listener } from './types';\n\nconst { event, divide, onChange, cond, eq, round, call, Value } = Animated;\n\ntype State = {\n  initialOffset: { x: number; y: number };\n};\n\nexport default class ScrollPager<T extends Route> extends React.Component<\n  Props<T> & { overscroll?: boolean },\n  State\n> {\n  static defaultProps = {\n    bounces: true,\n  };\n\n  componentDidMount() {\n    if (this.props.layout.width) {\n      this.scrollTo(\n        this.props.navigationState.index * this.props.layout.width,\n        false\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const offset = this.props.navigationState.index * this.props.layout.width;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this.scrollTo(offset, false);\n    } else if (\n      prevProps.navigationState.index !== this.props.navigationState.index\n    ) {\n      this.scrollTo(offset);\n    }\n\n    if (prevProps.layout.width !== this.props.layout.width) {\n      this.layoutWidthNode.setValue(this.props.layout.width);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.interactionHandle !== null) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n    }\n  }\n\n  private initialOffset = {\n    x: this.props.navigationState.index * this.props.layout.width,\n    y: 0,\n  };\n\n  private wasTouched: boolean = false;\n\n  // InteractionHandle to handle tasks around animations\n  private interactionHandle: number | null = null;\n\n  private scrollViewRef = React.createRef<Animated.ScrollView>();\n\n  private jumpTo = (key: string) => {\n    this.wasTouched = false;\n    const { navigationState, keyboardDismissMode, onIndexChange } = this.props;\n\n    const index = navigationState.routes.findIndex(\n      (route) => route.key === key\n    );\n\n    if (navigationState.index === index) {\n      this.scrollTo(index * this.props.layout.width);\n    } else {\n      onIndexChange(index);\n      if (keyboardDismissMode === 'auto') {\n        Keyboard.dismiss();\n      }\n    }\n  };\n\n  private scrollTo = (x: number, animated = true) => {\n    if (this.scrollViewRef.current) {\n      // getNode() is not necessary in newer versions of React Native\n      const scrollView =\n        // @ts-ignore\n        typeof this.scrollViewRef.current?.scrollTo === 'function'\n          ? this.scrollViewRef.current\n          : this.scrollViewRef.current?.getNode();\n\n      // @ts-ignore\n      scrollView?.scrollTo({\n        x,\n        animated: animated,\n      });\n    }\n  };\n\n  private enterListeners: Listener[] = [];\n\n  private addListener = (type: 'enter', listener: Listener) => {\n    switch (type) {\n      case 'enter':\n        this.enterListeners.push(listener);\n        break;\n    }\n  };\n\n  private removeListener = (type: 'enter', listener: Listener) => {\n    switch (type) {\n      case 'enter': {\n        const index = this.enterListeners.indexOf(listener);\n\n        if (index > -1) {\n          this.enterListeners.splice(index, 1);\n        }\n\n        break;\n      }\n    }\n  };\n\n  private position = new Animated.Value(\n    this.props.navigationState.index * this.props.layout.width\n  );\n\n  private onScroll = event([\n    {\n      nativeEvent: {\n        contentOffset: {\n          x: this.position,\n        },\n      },\n    },\n  ]);\n\n  private layoutWidthNode = new Value(this.props.layout.width);\n\n  private relativePosition = divide(this.position, this.layoutWidthNode);\n\n  render() {\n    const {\n      children,\n      layout,\n      onSwipeStart,\n      onSwipeEnd,\n      overscroll,\n      onIndexChange,\n      navigationState,\n    } = this.props;\n\n    const handleSwipeStart = () => {\n      this.wasTouched = false;\n      onSwipeStart?.();\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    };\n\n    const handleSwipeEnd = () => {\n      this.wasTouched = true;\n      onSwipeEnd?.();\n      if (this.interactionHandle !== null) {\n        InteractionManager.clearInteractionHandle(this.interactionHandle);\n      }\n    };\n\n    return children({\n      position: this.relativePosition,\n      addListener: this.addListener,\n      removeListener: this.removeListener,\n      jumpTo: this.jumpTo,\n      render: (children) => (\n        <Animated.ScrollView\n          pagingEnabled\n          directionalLockEnabled\n          keyboardDismissMode=\"on-drag\"\n          keyboardShouldPersistTaps=\"always\"\n          overScrollMode=\"never\"\n          scrollToOverflowEnabled\n          scrollEnabled={this.props.swipeEnabled}\n          automaticallyAdjustContentInsets={false}\n          bounces={overscroll}\n          scrollsToTop={false}\n          showsHorizontalScrollIndicator={false}\n          scrollEventThrottle={1}\n          onScroll={this.onScroll}\n          onScrollBeginDrag={handleSwipeStart}\n          onScrollEndDrag={handleSwipeEnd}\n          onMomentumScrollEnd={this.onScroll}\n          contentOffset={this.initialOffset}\n          style={styles.container}\n          contentContainerStyle={\n            layout.width\n              ? {\n                  flexDirection: 'row',\n                  width: layout.width * navigationState.routes.length,\n                  flex: 1,\n                }\n              : null\n          }\n          ref={this.scrollViewRef}\n        >\n          {children}\n          <Animated.Code\n            exec={onChange(\n              this.relativePosition,\n              cond(eq(round(this.relativePosition), this.relativePosition), [\n                call([this.relativePosition], ([relativePosition]) => {\n                  if (this.wasTouched) {\n                    onIndexChange(relativePosition);\n                    this.wasTouched = false;\n                  }\n                }),\n              ])\n            )}\n          />\n        </Animated.ScrollView>\n      ),\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}