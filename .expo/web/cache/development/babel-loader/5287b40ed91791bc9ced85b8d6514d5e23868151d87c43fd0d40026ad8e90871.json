{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollableTab = undefined;\nvar _jsxFileName = 'src/basic/Tabs/ScrollableTabBar.js';\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _createReactClass = require('create-react-class');\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\nvar _lodash = require('lodash');\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _mapPropsToStyleNames = require(\"../../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _platform = require(\"./../../theme/variables/platform\");\nvar _platform2 = _interopRequireDefault(_platform);\nvar _TabHeading = require(\"../TabHeading\");\nvar _Text = require(\"../Text\");\nvar _TabContainer = require(\"../TabContainer\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar Button = require(\"./Button\");\nvar ReactNative = require(\"react-native-web/dist/index\");\nvar View = ReactNative.View,\n  Animated = ReactNative.Animated,\n  StyleSheet = ReactNative.StyleSheet,\n  ScrollView = ReactNative.ScrollView,\n  Platform = ReactNative.Platform,\n  Dimensions = ReactNative.Dimensions;\nvar WINDOW_WIDTH = Dimensions.get('window').width;\nvar ScrollableTabBar = (0, _createReactClass2.default)({\n  displayName: 'ScrollableTabBar',\n  propTypes: {\n    goToPage: _propTypes2.default.func,\n    activeTab: _propTypes2.default.number,\n    tabs: _propTypes2.default.array,\n    backgroundColor: _propTypes2.default.string,\n    activeTextColor: _propTypes2.default.string,\n    inactiveTextColor: _propTypes2.default.string,\n    scrollOffset: _propTypes2.default.number,\n    style: _propTypes2.default.shape({\n      style: _propTypes2.default.any\n    }),\n    tabStyle: _propTypes2.default.shape({\n      style: _propTypes2.default.any\n    }),\n    tabsContainerStyle: _propTypes2.default.shape({\n      style: _propTypes2.default.any\n    }),\n    renderTab: _propTypes2.default.func,\n    underlineStyle: _propTypes2.default.shape({\n      style: _propTypes2.default.any\n    }),\n    onScroll: _propTypes2.default.func\n  },\n  contextTypes: {\n    theme: _propTypes2.default.object\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: _platform2.default.tabDefaultBg,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n      tabFontSize: _platform2.default.tabFontSize\n    };\n  },\n  getInitialState: function getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n  updateView: function updateView(offset) {\n    var position = Math.floor(offset.value);\n    var pageOffset = offset.value % 1;\n    var tabCount = this.props.tabs.length;\n    var lastTabPosition = tabCount - 1;\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n    if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n  necessarilyMeasurementsCompleted: function necessarilyMeasurementsCompleted(position, isLastTab) {\n    return this._tabsMeasurements[position] && (isLastTab || this._tabsMeasurements[position + 1]) && this._tabContainerMeasurements && this._containerMeasurements;\n  },\n  updateTabPanel: function updateTabPanel(position, pageOffset) {\n    var containerWidth = this._containerMeasurements.width;\n    var tabWidth = this._tabsMeasurements[position].width;\n    var nextTabMeasurements = this._tabsMeasurements[position + 1];\n    var nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;\n    var tabOffset = this._tabsMeasurements[position].left;\n    var absolutePageOffset = pageOffset * tabWidth;\n    var newScrollX = tabOffset + absolutePageOffset;\n    newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({\n        x: newScrollX,\n        y: 0,\n        animated: false\n      });\n    } else {\n      var rightBoundScroll = this._tabContainerMeasurements.width - this._containerMeasurements.width;\n      newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({\n        x: newScrollX,\n        y: 0,\n        animated: false\n      });\n    }\n  },\n  updateTabUnderline: function updateTabUnderline(position, pageOffset, tabCount) {\n    var lineLeft = this._tabsMeasurements[position].left;\n    var lineRight = this._tabsMeasurements[position].right;\n    if (position < tabCount - 1) {\n      var nextTabLeft = this._tabsMeasurements[position + 1].left;\n      var nextTabRight = this._tabsMeasurements[position + 1].right;\n      var newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\n      var newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle, tabFontSize) {\n    var headerContent = typeof name !== 'string' ? name.props.children : undefined;\n    var _props = this.props,\n      activeTextColor = _props.activeTextColor,\n      inactiveTextColor = _props.inactiveTextColor;\n    var textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    var fontWeight = isTabActive ? 'bold' : 'normal';\n    if (typeof name === 'string') {\n      return _react2.default.createElement(Button, {\n        key: name + '_' + page,\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        onLayout: onLayoutHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        }\n      }, _react2.default.createElement(_TabHeading.TabHeading, {\n        scrollable: true,\n        style: isTabActive ? activeTabStyle : tabStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        }\n      }, _react2.default.createElement(_Text.Text, {\n        style: [isTabActive ? activeTextStyle : textStyle, {\n          fontSize: tabFontSize\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        }\n      }, name)));\n    }\n    return _react2.default.createElement(Button, {\n      key: name + '_' + page,\n      onPress: function onPress() {\n        return onPressHandler(page);\n      },\n      onLayout: onLayoutHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      }\n    }, _react2.default.createElement(_TabHeading.TabHeading, {\n      scrollable: true,\n      style: tabHeaderStyle,\n      active: isTabActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      }\n    }, headerContent));\n  },\n  measureTab: function measureTab(page, event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      x = _event$nativeEvent$la.x,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    this._tabsMeasurements[page] = {\n      left: x,\n      right: x + width,\n      width: width,\n      height: height\n    };\n    this.updateView({\n      value: this.props.scrollValue._value\n    });\n  },\n  render: function render() {\n    var _this = this;\n    var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n    var tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n    var dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline\n    };\n    return _react2.default.createElement(View, {\n      style: [styles.container, {\n        backgroundColor: this.props.backgroundColor\n      }, this.props.style],\n      onLayout: this.onContainerLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      }\n    }, _react2.default.createElement(ScrollView, {\n      automaticallyAdjustContentInsets: false,\n      ref: function ref(scrollView) {\n        _this._scrollView = scrollView;\n      },\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      directionalLockEnabled: true,\n      onScroll: this.props.onScroll,\n      bounces: false,\n      scrollsToTop: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      }\n    }, _react2.default.createElement(View, {\n      style: [styles.tabs, {\n        width: this.state._containerWidth\n      }, this.props.tabsContainerStyle],\n      ref: 'tabContainer',\n      onLayout: this.onTabContainerLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage, _this.measureTab.bind(_this, page), _this.props.tabStyle[page], _this.props.activeTabStyle[page], _this.props.textStyle[page], _this.props.activeTextStyle[page], _this.props.tabHeaderStyle[page], _this.props.tabFontSize[page]);\n    }), _react2.default.createElement(Animated.View, {\n      style: [tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      }\n    }))));\n  },\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!(0, _lodash.isEqual)(this.props.tabs, nextProps.tabs) && this.state._containerWidth) {\n      this.setState({\n        _containerWidth: null\n      });\n    }\n  },\n  onTabContainerLayout: function onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    var width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({\n      _containerWidth: width\n    });\n    this.updateView({\n      value: this.props.scrollValue._value\n    });\n  },\n  onContainerLayout: function onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({\n      value: this.props.scrollValue._value\n    });\n  }\n});\nvar StyledTab = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.ScrollableTab', {}, _mapPropsToStyleNames2.default)(ScrollableTabBar);\nexports.ScrollableTab = StyledTab;\nvar styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc'\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n});","map":{"version":3,"names":["_react","require","_propTypes","_createReactClass","_lodash","_nativeBaseShoutemTheme","_mapPropsToStyleNames","_platform","_TabHeading","_Text","_TabContainer","Button","ReactNative","View","Animated","StyleSheet","ScrollView","Platform","Dimensions","WINDOW_WIDTH","get","width","ScrollableTabBar","_createReactClass2","default","displayName","propTypes","goToPage","_propTypes2","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","scrollOffset","style","shape","any","tabStyle","tabsContainerStyle","renderTab","underlineStyle","onScroll","contextTypes","theme","object","getDefaultProps","_platform2","tabDefaultBg","tabFontSize","getInitialState","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","componentDidMount","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","children","undefined","_props","textColor","fontWeight","_react2","createElement","key","onPress","onLayout","__source","fileName","_jsxFileName","lineNumber","TabHeading","scrollable","active","Text","fontSize","measureTab","event","_event$nativeEvent$la","nativeEvent","layout","height","_value","render","_this","variables","context","tabUnderlineStyle","topTabBarActiveBorderColor","bottom","dynamicTabUnderline","styles","container","onContainerLayout","automaticallyAdjustContentInsets","ref","scrollView","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","directionalLockEnabled","bounces","scrollsToTop","onTabContainerLayout","map","bind","UNSAFE_componentWillReceiveProps","nextProps","isEqual","setState","e","StyledTab","connectStyle","_mapPropsToStyleNames2","ScrollableTab","create","tab","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"sources":["C:\\Users\\adamk\\Downloads\\kasino9\\node_modules\\native-base\\src\\basic\\Tabs\\ScrollableTabBar.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport { isEqual } from 'lodash';\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading } from '../TabHeading';\nimport { Text } from '../Text';\nimport { TabContainer } from '../TabContainer';\nconst Button = require('./Button');\nconst ReactNative = require('react-native');\nconst {\n  View,\n  Animated,\n  StyleSheet,\n  ScrollView,\n  Platform,\n  Dimensions\n} = ReactNative;\n\nconst WINDOW_WIDTH = Dimensions.get('window').width;\n\nconst ScrollableTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    scrollOffset: PropTypes.number,\n    style: PropTypes.shape({\n      style: PropTypes.any,\n    }),\n    tabStyle: PropTypes.shape({\n      style: PropTypes.any,\n    }),\n    tabsContainerStyle: PropTypes.shape({\n      style: PropTypes.any,\n    }),\n    renderTab: PropTypes.func,\n    underlineStyle: PropTypes.shape({\n      style: PropTypes.any,\n    }),\n    onScroll: PropTypes.func\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: variable.tabDefaultBg,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null\n    };\n  },\n\n  componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n\n  updateView(offset) {\n    const position = Math.floor(offset.value);\n    const pageOffset = offset.value % 1;\n    const tabCount = this.props.tabs.length;\n    const lastTabPosition = tabCount - 1;\n\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n\n    if (\n      this.necessarilyMeasurementsCompleted(\n        position,\n        position === lastTabPosition\n      )\n    ) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n\n  necessarilyMeasurementsCompleted(position, isLastTab) {\n    return (\n      this._tabsMeasurements[position] &&\n      (isLastTab || this._tabsMeasurements[position + 1]) &&\n      this._tabContainerMeasurements &&\n      this._containerMeasurements\n    );\n  },\n\n  updateTabPanel(position, pageOffset) {\n    const containerWidth = this._containerMeasurements.width;\n    const tabWidth = this._tabsMeasurements[position].width;\n    const nextTabMeasurements = this._tabsMeasurements[position + 1];\n    const nextTabWidth =\n      (nextTabMeasurements && nextTabMeasurements.width) || 0;\n    const tabOffset = this._tabsMeasurements[position].left;\n    const absolutePageOffset = pageOffset * tabWidth;\n    let newScrollX = tabOffset + absolutePageOffset;\n\n    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\n    newScrollX -=\n      (containerWidth -\n        (1 - pageOffset) * tabWidth -\n        pageOffset * nextTabWidth) /\n      2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n    } else {\n      const rightBoundScroll =\n        this._tabContainerMeasurements.width -\n        this._containerMeasurements.width;\n      newScrollX =\n        newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n    }\n  },\n\n  updateTabUnderline(position, pageOffset, tabCount) {\n    const lineLeft = this._tabsMeasurements[position].left;\n    const lineRight = this._tabsMeasurements[position].right;\n\n    if (position < tabCount - 1) {\n      const nextTabLeft = this._tabsMeasurements[position + 1].left;\n      const nextTabRight = this._tabsMeasurements[position + 1].right;\n\n      const newLineLeft =\n        pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\n      const newLineRight =\n        pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\n\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    onLayoutHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize\n  ) {\n    const headerContent =\n      typeof name !== 'string' ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n\n    if (typeof name === 'string') {\n      return (\n        <Button\n          key={`${name}_${page}`}\n          onPress={() => onPressHandler(page)}\n          onLayout={onLayoutHandler}\n        >\n          <TabHeading\n            scrollable\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                isTabActive ? activeTextStyle : textStyle,\n                { fontSize: tabFontSize }\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    }\n    return (\n      <Button\n        key={`${name}_${page}`}\n        onPress={() => onPressHandler(page)}\n        onLayout={onLayoutHandler}\n      >\n        <TabHeading scrollable style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    );\n\n  },\n\n  measureTab(page, event) {\n    const { x, width, height } = event.nativeEvent.layout;\n    this._tabsMeasurements[page] = { left: x, right: x + width, width, height };\n    this.updateView({ value: this.props.scrollValue._value });\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline\n    };\n\n    return (\n      <View\n        style={[\n          styles.container,\n          { backgroundColor: this.props.backgroundColor },\n          this.props.style\n        ]}\n        onLayout={this.onContainerLayout}\n      >\n        <ScrollView\n          automaticallyAdjustContentInsets={false}\n          ref={scrollView => {\n            this._scrollView = scrollView;\n          }}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          directionalLockEnabled\n          onScroll={this.props.onScroll}\n          bounces={false}\n          scrollsToTop={false}\n        >\n          <View\n            style={[\n              styles.tabs,\n              { width: this.state._containerWidth },\n              this.props.tabsContainerStyle\n            ]}\n            ref={'tabContainer'}\n            onLayout={this.onTabContainerLayout}\n          >\n            {this.props.tabs.map((name, page) => {\n              const isTabActive = this.props.activeTab === page;\n              const renderTab = this.props.renderTab || this.renderTab;\n              return renderTab(\n                name,\n                page,\n                isTabActive,\n                this.props.goToPage,\n                this.measureTab.bind(this, page),\n                this.props.tabStyle[page],\n                this.props.activeTabStyle[page],\n                this.props.textStyle[page],\n                this.props.activeTextStyle[page],\n                this.props.tabHeaderStyle[page],\n                this.props.tabFontSize[page]\n              );\n            })}\n            <Animated.View\n              style={[\n                tabUnderlineStyle,\n                dynamicTabUnderline,\n                this.props.underlineStyle\n              ]}\n            />\n          </View>\n        </ScrollView>\n      </View>\n    );\n  },\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // If the tabs change, force the width of the tabs container to be recalculated\n    if (\n      !isEqual(this.props.tabs, nextProps.tabs) &&\n      this.state._containerWidth\n    ) {\n      this.setState({ _containerWidth: null });\n    }\n  },\n\n  onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    let width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({ _containerWidth: width });\n    this.updateView({ value: this.props.scrollValue._value });\n  },\n\n  onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({ value: this.props.scrollValue._value });\n  }\n});\n\n// module.exports = ScrollableTabBar;\nconst StyledTab = connectStyle(\n  'NativeBase.ScrollableTab',\n  {},\n  mapPropsToStyleNames\n)(ScrollableTabBar);\nexport { StyledTab as ScrollableTab };\nconst styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc'\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}