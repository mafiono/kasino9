{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _actionMap,\n  _jsxFileName = \"C:\\\\Users\\\\adamk\\\\Downloads\\\\kasino9\\\\node_modules\\\\react-native-router-flux\\\\src\\\\navigationStore.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { createAppContainer, NavigationActions, StackActions } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createDrawerNavigator, DrawerActions } from 'react-navigation-drawer';\nimport { createMaterialTopTabNavigator, createBottomTabNavigator } from 'react-navigation-tabs';\nimport PropTypes from 'prop-types';\nimport createReducer from \"./Reducer\";\nimport * as ActionConst from \"./ActionConst\";\nimport { OnEnter, OnExit, assert } from \"./Util\";\nimport { LeftButton, RightButton, BackButton } from \"./NavBar\";\nimport LightboxRenderer from \"./LightboxRenderer\";\nimport _drawerImage from \"../images/menu_burger.png\";\nimport { getActiveState, getParent, getRouteNameByKey } from \"./State\";\nimport Modal from \"./Modal\";\nimport Lightbox from \"./Lightbox\";\nimport Drawer from \"./Drawer\";\nimport Tabs from \"./Tabs\";\nimport Overlay from \"./Overlay\";\nimport OverlayRenderer from \"./OverlayRenderer\";\nimport createStackNavigatorHOC from \"./createStackNavigatorHOC\";\nimport createTabNavigatorHOC from \"./createTabNavigatorHOC\";\nvar RightNavBarButton;\nvar LeftNavBarButton;\nvar BackNavBarButton;\nvar counter = 0;\nexport var actionMap = (_actionMap = {}, _defineProperty(_actionMap, ActionConst.JUMP, 'jump'), _defineProperty(_actionMap, ActionConst.PUSH, 'push'), _defineProperty(_actionMap, ActionConst.REPLACE, 'replace'), _defineProperty(_actionMap, ActionConst.BACK, 'pop'), _defineProperty(_actionMap, ActionConst.BACK_ACTION, 'pop'), _defineProperty(_actionMap, ActionConst.POP_TO, 'popTo'), _defineProperty(_actionMap, ActionConst.REFRESH, 'refresh'), _defineProperty(_actionMap, ActionConst.RESET, 'reset'), _defineProperty(_actionMap, ActionConst.PUSH_OR_POP, 'push'), _actionMap);\nvar reservedKeys = ['addRef', 'back', 'children', 'create', 'dispatch', 'drawerClose', 'drawerOpen', 'execute', 'left', 'leftButton', 'navBar', 'navigate', 'on', 'onEnter', 'onExit', 'onLeft', 'onRight', 'pop', 'popTo', 'push', 'refresh', 'refs', 'removeRef', 'renderLeftButton', 'renderRightButton', 'renderTitle', 'replace', 'right', 'rightButton', 'run', 'setParams', 'title'];\nvar dontInheritKeys = ['backToInitial', 'children', 'component', 'contentComponent', 'drawer', 'hideNavBar', 'hideTabBar', 'key', 'lightbox', 'modal', 'navigator', 'navTransparent', 'overlay', 'ref', 'style', 'tabBarComponent', 'tabs', 'title', 'type'];\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\nfunction getProperties() {\n  var component = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var res = {};\n  for (var _i = 0, _reservedKeys = reservedKeys; _i < _reservedKeys.length; _i++) {\n    var key = _reservedKeys[_i];\n    if (component[key]) {\n      res[key] = component[key];\n    }\n  }\n  delete res.children;\n  return res;\n}\nfunction createTabBarOptions(_ref) {\n  var tabBarStyle = _ref.tabBarStyle,\n    activeTintColor = _ref.activeTintColor,\n    inactiveTintColor = _ref.inactiveTintColor,\n    activeBackgroundColor = _ref.activeBackgroundColor,\n    inactiveBackgroundColor = _ref.inactiveBackgroundColor,\n    showLabel = _ref.showLabel,\n    labelStyle = _ref.labelStyle,\n    tabStyle = _ref.tabStyle,\n    props = _objectWithoutProperties(_ref, [\"tabBarStyle\", \"activeTintColor\", \"inactiveTintColor\", \"activeBackgroundColor\", \"inactiveBackgroundColor\", \"showLabel\", \"labelStyle\", \"tabStyle\"]);\n  return _objectSpread(_objectSpread({}, props), {}, {\n    style: tabBarStyle,\n    activeTintColor: activeTintColor,\n    inactiveTintColor: inactiveTintColor,\n    activeBackgroundColor: activeBackgroundColor,\n    inactiveBackgroundColor: inactiveBackgroundColor,\n    showLabel: showLabel,\n    labelStyle: labelStyle,\n    tabStyle: tabStyle\n  });\n}\nfunction createNavigationOptions(params) {\n  var _this = this;\n  var back = params.back,\n    backButtonImage = params.backButtonImage,\n    backButtonTextStyle = params.backButtonTextStyle,\n    backTitle = params.backTitle,\n    backTitleEnabled = params.backTitleEnabled,\n    backToInitial = params.backToInitial,\n    component = params.component,\n    drawerIcon = params.drawerIcon,\n    drawerImage = params.drawerImage,\n    drawerPosition = params.drawerPosition,\n    getTitle = params.getTitle,\n    headerLayoutPreset = params.headerLayoutPreset,\n    headerStyle = params.headerStyle,\n    headerTitleStyle = params.headerTitleStyle,\n    hideDrawerButton = params.hideDrawerButton,\n    hideNavBar = params.hideNavBar,\n    hideTabBar = params.hideTabBar,\n    icon = params.icon,\n    init = params.init,\n    left = params.left,\n    leftButton = params.leftButton,\n    leftButtonImage = params.leftButtonImage,\n    leftButtonTextStyle = params.leftButtonTextStyle,\n    leftTitle = params.leftTitle,\n    navBar = params.navBar,\n    navBarButtonColor = params.navBarButtonColor,\n    navigationBarStyle = params.navigationBarStyle,\n    navigationBarTitleImage = params.navigationBarTitleImage,\n    navigationBarTitleImageStyle = params.navigationBarTitleImageStyle,\n    navTransparent = params.navTransparent,\n    onLeft = params.onLeft,\n    onRight = params.onRight,\n    panHandlers = params.panHandlers,\n    renderBackButton = params.renderBackButton,\n    renderNavigationBar = params.renderNavigationBar,\n    renderTitle = params.renderTitle,\n    right = params.right,\n    rightButton = params.rightButton,\n    rightButtonImage = params.rightButtonImage,\n    rightButtonTextStyle = params.rightButtonTextStyle,\n    rightTitle = params.rightTitle,\n    tabBarIcon = params.tabBarIcon,\n    tabBarLabel = params.tabBarLabel,\n    title = params.title,\n    titleStyle = params.titleStyle,\n    props = _objectWithoutProperties(params, [\"back\", \"backButtonImage\", \"backButtonTextStyle\", \"backTitle\", \"backTitleEnabled\", \"backToInitial\", \"component\", \"drawerIcon\", \"drawerImage\", \"drawerPosition\", \"getTitle\", \"headerLayoutPreset\", \"headerStyle\", \"headerTitleStyle\", \"hideDrawerButton\", \"hideNavBar\", \"hideTabBar\", \"icon\", \"init\", \"left\", \"leftButton\", \"leftButtonImage\", \"leftButtonTextStyle\", \"leftTitle\", \"navBar\", \"navBarButtonColor\", \"navigationBarStyle\", \"navigationBarTitleImage\", \"navigationBarTitleImageStyle\", \"navTransparent\", \"onLeft\", \"onRight\", \"panHandlers\", \"renderBackButton\", \"renderNavigationBar\", \"renderTitle\", \"right\", \"rightButton\", \"rightButtonImage\", \"rightButtonTextStyle\", \"rightTitle\", \"tabBarIcon\", \"tabBarLabel\", \"title\", \"titleStyle\"]);\n  var NavBar = renderNavigationBar || navBar;\n  if (component && component.navigationOptions) {\n    return component.navigationOptions;\n  }\n  return function (_ref2) {\n    var navigation = _ref2.navigation,\n      screenProps = _ref2.screenProps;\n    var navigationParams = navigation.state.params || {};\n    var state = _objectSpread(_objectSpread(_objectSpread({\n      navigation: navigation\n    }, params), navigationParams), screenProps);\n    var res = _objectSpread(_objectSpread({}, props), {}, {\n      headerBackImage: navigationParams.backButtonImage || backButtonImage,\n      headerBackTitle: getValue(navigationParams.backTitle || backTitle, state),\n      headerBackTitleEnabled: navigationParams.backTitleEnabled || backTitleEnabled,\n      headerLayoutPreset: navigationParams.headerLayoutPreset || headerLayoutPreset,\n      headerLeft: getValue(navigationParams.left || left || leftButton || params.renderLeftButton, state),\n      headerRight: getValue(navigationParams.right || right || rightButton || params.renderRightButton, state),\n      headerStyle: getValue(navigationParams.headerStyle || headerStyle || navigationBarStyle, state),\n      headerTintColor: navBarButtonColor || props.tintColor || navigationParams.tintColor || navigationParams.headerTintColor,\n      headerTitle: getValue(navigationParams.renderTitle || renderTitle || params.renderTitle, state),\n      headerTitleStyle: headerTitleStyle || titleStyle,\n      title: getValue(navigationParams.title || title || getTitle, state)\n    });\n    var NavBarFromParams = navigationParams.renderNavigationBar || navigationParams.navBar;\n    if (NavBarFromParams != null) {\n      if (NavBarFromParams) {\n        res.header = function (data) {\n          return React.createElement(NavBarFromParams, _extends({\n            navigation: navigation\n          }, state, data, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 30\n            }\n          }));\n        };\n      }\n    } else if (NavBar) {\n      res.header = function (data) {\n        return React.createElement(NavBar, _extends({\n          navigation: navigation\n        }, state, data, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 28\n          }\n        }));\n      };\n    }\n    if (typeof navigationParams.panHandlers !== 'undefined') {\n      if (navigationParams.panHandlers === null) {\n        res.gesturesEnabled = false;\n      }\n    } else if (panHandlers === null) {\n      res.gesturesEnabled = false;\n    }\n    if (navigationBarTitleImage) {\n      res.headerTitle = React.createElement(Image, {\n        source: navigationBarTitleImage,\n        style: navigationBarTitleImageStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      });\n    }\n    if (tabBarLabel) {\n      res.tabBarLabel = tabBarLabel;\n    }\n    if (tabBarIcon || icon) {\n      var Icon = tabBarIcon || icon;\n      res.tabBarIcon = function (data) {\n        return React.createElement(Icon, _extends({}, state, data, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 32\n          }\n        }));\n      };\n    }\n    var componentData = {};\n    if (component) {\n      for (var _i2 = 0, _arr = ['onRight', 'onLeft', 'rightButton', 'leftButton', 'leftTitle', 'rightTitle', 'rightButtonImage', 'leftButtonImage', 'rightButtonTextStyle', 'leftButtonTextStyle', 'rightButtonIconStyle', 'leftButtonIconStyle', 'leftButtonTintColor', 'rightButtonTintColor']; _i2 < _arr.length; _i2++) {\n        var key = _arr[_i2];\n        if (component[key]) {\n          componentData[key] = component[key];\n        }\n      }\n    }\n    if (rightButtonImage || rightTitle || params.renderRightButton || onRight || navigationParams.onRight || navigationParams.rightTitle || navigationParams.rightButtonImage || rightButtonTextStyle || (drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition === 'right') {\n      res.headerRight = getValue(navigationParams.right || navigationParams.rightButton || params.renderRightButton, _objectSpread(_objectSpread({}, navigationParams), screenProps)) || React.createElement(RightNavBarButton, _extends({\n        navigation: navigation\n      }, params, navigationParams, componentData, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }\n      }));\n    }\n    if (leftButtonImage || backButtonImage || backTitle || leftTitle || params.renderLeftButton || leftButtonTextStyle || renderBackButton || backButtonTextStyle || onLeft || navigationParams.leftTitle || navigationParams.onLeft || navigationParams.leftButtonImage || navigationParams.backButtonImage || navigationParams.backTitle || (drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition !== 'right') {\n      var _leftButton = navigationParams.left || navigationParams.leftButton || params.renderLeftButton;\n      res.headerLeft = getValue(_leftButton, _objectSpread(_objectSpread(_objectSpread({}, params), navigationParams), screenProps)) || (onLeft && (leftTitle || navigationParams.leftTitle || leftButtonImage || navigationParams.leftButtonImage) || drawerImage || drawerIcon) && React.createElement(LeftNavBarButton, _extends({\n        navigation: navigation\n      }, params, navigationParams, componentData, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }\n      })) || res.headerLeft || (init ? null : !_leftButton && renderBackButton && renderBackButton(state) || !_leftButton && React.createElement(BackNavBarButton, _extends({\n        navigation: navigation\n      }, state, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 107\n        }\n      }))) || null;\n    }\n    if (back) {\n      res.headerLeft = renderBackButton && renderBackButton(state) || React.createElement(BackNavBarButton, _extends({\n        navigation: navigation\n      }, state, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 73\n        }\n      }));\n    }\n    if (typeof navigationParams.left !== 'undefined' || typeof navigationParams.leftButton !== 'undefined' || typeof navigationParams.renderLeftButton !== 'undefined') {\n      if (navigationParams.left === null || navigationParams.leftButton === null || navigationParams.renderLeftButton === null) {\n        res.headerLeft = null;\n      }\n    }\n    var routeParams = navigation.state.routes && navigation.state.routes[navigation.state.index].params;\n    if (navigationParams.hideTabBar != null) {\n      if (navigationParams.hideTabBar) {\n        res.tabBarVisible = false;\n      }\n    } else if (hideTabBar) {\n      res.tabBarVisible = false;\n    } else if (routeParams && routeParams.hideTabBar) {\n      res.tabBarVisible = false;\n    }\n    if (navigationParams.hideNavBar != null) {\n      if (navigationParams.hideNavBar) {\n        res.header = null;\n      }\n    } else if (hideNavBar) {\n      res.header = null;\n    }\n    if (navTransparent) {\n      res.headerTransparent = true;\n      res.headerStyle = {};\n    }\n    if (backToInitial) {\n      var userDefinedTabBarOnPress = res.tabBarOnPress;\n      res.tabBarOnPress = function (data) {\n        if (userDefinedTabBarOnPress) {\n          console.warn('backToInitial and tabBarOnPress were both defined and might cause unexpected navigation behaviors. I hope you know what you are doing ;-)');\n          userDefinedTabBarOnPress(data);\n        }\n        if (data.navigation && data.navigation.state.index !== 0) {\n          data.navigation.dispatch(StackActions.popToTop());\n        } else {\n          data.defaultHandler();\n        }\n      };\n    }\n    return res;\n  };\n}\nfunction originalRouteName(routeName) {\n  if (routeName.startsWith('_')) {\n    return routeName.substring(1);\n  }\n  return routeName;\n}\nfunction isStatelessComponent(Component) {\n  return !Component.prototype || typeof Component.prototype.render !== 'function';\n}\nfunction extendProps(props, store) {\n  if (!props) {\n    return {};\n  }\n  var res = _objectSpread({}, props);\n  var _loop = function _loop(transition) {\n    if (reservedKeys.indexOf(transition) === -1 && transition.startsWith('on') && transition.charAt(2) >= 'A' && transition.charAt(2) <= 'Z' && typeof props[transition] === 'string') {\n      if (store[props[transition]]) {\n        res[transition] = function (params) {\n          return store[props[transition]](params);\n        };\n      }\n    }\n  };\n  for (var _i3 = 0, _Object$keys = Object.keys(props); _i3 < _Object$keys.length; _i3++) {\n    var transition = _Object$keys[_i3];\n    _loop(transition);\n  }\n  return res;\n}\nfunction createWrapper(Component, wrapBy, store) {\n  if (!Component) {\n    return null;\n  }\n  var wrapper = wrapBy || function (props) {\n    return props;\n  };\n  if (!isStatelessComponent(Component)) {\n    var Wrapped = function (_React$Component) {\n      _inherits(Wrapped, _React$Component);\n      var _super = _createSuper(Wrapped);\n      function Wrapped() {\n        var _this2;\n        _classCallCheck(this, Wrapped);\n        _this2 = _super.call(this);\n        _this2.onRef = _this2.onRef.bind(_assertThisInitialized(_this2));\n        return _this2;\n      }\n      _createClass(Wrapped, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var navigation = this.props.navigation;\n          if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n            store.addRef(originalRouteName(navigation.state.routeName), this.ref);\n          }\n          if (this.ref && this.ref.onEnter) {\n            this.ref.onEnter(navigation && navigation.state);\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          var navigation = this.props.navigation;\n          if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n            store.deleteRef(originalRouteName(navigation.state.routeName));\n          }\n          if (this.ref && this.ref.onExit) {\n            this.ref.onExit(navigation && navigation.state);\n          }\n          this.ref = null;\n        }\n      }, {\n        key: \"onRef\",\n        value: function onRef(ref) {\n          this.ref = ref;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var navigation = this.props.navigation;\n          if (!navigation || !navigation.state) {\n            return React.createElement(Component, _extends({\n              ref: this.onRef\n            }, this.props, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 18\n              }\n            }));\n          }\n          return React.createElement(Component, _extends({\n            ref: this.onRef\n          }, this.props, extendProps(navigation.state.params, store), {\n            name: navigation.state.routeName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 16\n            }\n          }));\n        }\n      }]);\n      return Wrapped;\n    }(React.Component);\n    Wrapped.propTypes = {\n      navigation: PropTypes.shape().isRequired\n    };\n    return wrapper(Wrapped);\n  }\n  function StatelessWrapped(_ref3) {\n    var navigation = _ref3.navigation,\n      props = _objectWithoutProperties(_ref3, [\"navigation\"]);\n    return React.createElement(Component, _extends({}, props, {\n      navigation: navigation\n    }, extendProps(navigation.state.params, store), {\n      name: navigation.state.routeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 12\n      }\n    }));\n  }\n  StatelessWrapped.propTypes = {\n    navigation: PropTypes.shape().isRequired\n  };\n  return wrapper(StatelessWrapped);\n}\nfunction filterParam() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (data.toString() !== '[object Object]') {\n    return {\n      data: data\n    };\n  }\n  var proto = (data || {}).constructor.name;\n  if (!data || proto !== 'Object') {\n    return {};\n  }\n  return data;\n}\nfunction uniteParams(routeName, params) {\n  var res = {};\n  for (var _iterator = _createForOfIteratorHelperLoose(params), _step; !(_step = _iterator()).done;) {\n    var param = _step.value;\n    if (param) {\n      res = _objectSpread(_objectSpread({}, res), filterParam(param));\n    }\n  }\n  res.routeName = routeName;\n  return res;\n}\nvar defaultSuccess = function defaultSuccess() {};\nvar defaultFailure = function defaultFailure() {};\nvar NavigationStore = function () {\n  function NavigationStore() {\n    var _this3 = this;\n    _classCallCheck(this, NavigationStore);\n    this.getStateForAction = null;\n    this.reducer = null;\n    this._navigator = null;\n    this.externalDispatch = null;\n    this.externalState = null;\n    this.prevState = null;\n    this.externalAction = {};\n    this.refs = {};\n    this.states = {};\n    this.isLogical = {};\n    this.setCustomReducer = function (Navigator) {\n      _this3.getStateForAction = Navigator.router.getStateForAction;\n      var reducer = createReducer();\n      Navigator.router.getStateForAction = function (cmd, state) {\n        return _this3.reducer ? _this3.reducer(state, cmd) : reducer(state, cmd);\n      };\n    };\n    this.onEnterHandler = function _callee(currentScene) {\n      var handler, success, failure, res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this3.states[currentScene]) {\n                _context.next = 15;\n                break;\n              }\n              handler = _this3[currentScene + OnEnter];\n              success = _this3.states[currentScene].success || defaultSuccess;\n              failure = _this3.states[currentScene].failure || defaultFailure;\n              if (!handler) {\n                _context.next = 15;\n                break;\n              }\n              _context.prev = 5;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(handler(_this3.currentParams, _this3.state));\n            case 8:\n              res = _context.sent;\n              if (res) {\n                success(res);\n              } else {\n                failure();\n              }\n              _context.next = 15;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](5);\n              failure({\n                error: _context.t0.message\n              });\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[5, 12]], Promise);\n    };\n    this.onExitHandler = function (prevScene) {\n      if (prevScene) {\n        var exitHandler = _this3[prevScene + OnExit];\n        if (exitHandler) {\n          try {\n            var res = exitHandler(_this3.state);\n            if (res instanceof Promise) {\n              res.then(defaultSuccess, defaultFailure);\n            }\n          } catch (e) {\n            console.error('Error during onExit handler:', e);\n          }\n        }\n      }\n    };\n    this.onNavigationStateChange = function _callee2(prevState, currentState, action) {\n      var activeState, currentScene, routeName;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this3.state = currentState;\n              _this3.prevState = prevState;\n              activeState = getActiveState(_this3.state);\n              currentScene = activeState.routeName;\n              _this3.currentParams = _objectSpread(_objectSpread({}, activeState.params), action.params);\n              _this3.currentScene = currentScene;\n              _this3.prevScene = _this3.prevState ? getActiveState(_this3.prevState).routeName : null;\n              if (_this3.currentScene !== _this3.prevScene) {\n                _this3.onExitHandler(_this3.prevScene);\n                setTimeout(function () {\n                  return _this3.dispatch({\n                    type: ActionConst.FOCUS,\n                    routeName: _this3.currentScene,\n                    params: _this3.currentParams\n                  });\n                });\n                _this3.onEnterHandler(currentScene);\n              } else {\n                routeName = getRouteNameByKey(_this3.state, action.key);\n                if (action.type === 'Navigation/DRAWER_OPENED') {\n                  _this3.onEnterHandler(routeName);\n                } else if (action.type === 'Navigation/DRAWER_CLOSED') {\n                  _this3.onExitHandler(routeName);\n                }\n              }\n              if (_this3.onStateChange) {\n                _this3.onStateChange(prevState, currentState, action);\n              }\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n    this.setTopLevelNavigator = function (navigatorRef) {\n      _this3._navigator = navigatorRef;\n    };\n    this.addRef = function (name, ref) {\n      _this3.refs[name] = ref;\n    };\n    this.deleteRef = function (name) {\n      delete _this3.refs[name];\n    };\n    this.create = function (scene) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var wrapBy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (props) {\n        return props;\n      };\n      assert(!Array.isArray(scene), 'Router should contain only one scene, please wrap your scenes with root Scene ');\n      RightNavBarButton = wrapBy(RightButton);\n      LeftNavBarButton = wrapBy(LeftButton);\n      BackNavBarButton = wrapBy(BackButton);\n      var Navigator = _this3.processScene(scene, params, [], wrapBy);\n      _this3.onNavigationStateChange(null, Navigator.router.getStateForAction(NavigationActions.init()), NavigationActions.init());\n      _this3.setCustomReducer(Navigator);\n      return createAppContainer(Navigator);\n    };\n    this.createAction = function (name) {\n      return function (args) {\n        if (_this3.isLogical[name]) {\n          _this3[name](args);\n        } else {\n          setTimeout(function () {\n            return _this3[name](args);\n          });\n        }\n      };\n    };\n    this.processScene = function (scene) {\n      var _ref4;\n      var inheritProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var clones = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var wrapBy = arguments.length > 3 ? arguments[3] : undefined;\n      assert(scene.props, 'props should be defined');\n      if (!scene.props.children) {\n        return null;\n      }\n      var res = {};\n      var order = [];\n      var _scene$props = scene.props,\n        navigator = _scene$props.navigator,\n        renderer = _scene$props.renderer,\n        contentComponent = _scene$props.contentComponent,\n        drawerWidth = _scene$props.drawerWidth,\n        drawerLockMode = _scene$props.drawerLockMode,\n        tabBarPosition = _scene$props.tabBarPosition,\n        lazy = _scene$props.lazy,\n        duration = _scene$props.duration,\n        parentProps = _objectWithoutProperties(_scene$props, [\"navigator\", \"renderer\", \"contentComponent\", \"drawerWidth\", \"drawerLockMode\", \"tabBarPosition\", \"lazy\", \"duration\"]);\n      var tabs = parentProps.tabs,\n        modal = parentProps.modal,\n        lightbox = parentProps.lightbox,\n        overlay = parentProps.overlay,\n        drawer = parentProps.drawer,\n        transitionConfig = parentProps.transitionConfig,\n        tabBarComponent = parentProps.tabBarComponent;\n      if (scene.type === Modal) {\n        modal = true;\n      } else if (scene.type === Drawer) {\n        drawer = true;\n      } else if (scene.type === Lightbox) {\n        lightbox = true;\n      } else if (scene.type === Tabs) {\n        tabs = true;\n      } else if (scene.type === Overlay) {\n        overlay = true;\n      }\n      if (duration !== undefined && !transitionConfig) {\n        transitionConfig = function transitionConfig() {\n          return {\n            transitionSpec: {\n              duration: duration,\n              timing: Animated.timing,\n              easing: Easing.step0\n            }\n          };\n        };\n      }\n      var commonProps = _objectSpread(_objectSpread({}, inheritProps), parentProps);\n      delete commonProps.children;\n      delete commonProps.component;\n      for (var _i4 = 0, _Object$keys2 = Object.keys(commonProps); _i4 < _Object$keys2.length; _i4++) {\n        var pkey = _Object$keys2[_i4];\n        if (dontInheritKeys.includes(pkey) && (pkey === 'type' || pkey === 'hideNavBar' || !parentProps[pkey])) {\n          delete commonProps[pkey];\n        }\n      }\n      if (drawer) {\n        commonProps.drawerImage = commonProps.drawerImage || _drawerImage;\n      }\n      var children = !Array.isArray(parentProps.children) ? [parentProps.children] : (_ref4 = []).concat.apply(_ref4, _toConsumableArray(parentProps.children));\n      if (!drawer && !tabs && !overlay) {\n        children.push.apply(children, _toConsumableArray(clones));\n      }\n      for (var _iterator2 = _createForOfIteratorHelperLoose(children), _step2; !(_step2 = _iterator2()).done;) {\n        var child = _step2.value;\n        if (child && child.props.clone) {\n          if (clones.indexOf(child) === -1) {\n            clones.push(child);\n          }\n        }\n      }\n      var initialRouteName;\n      var initialRouteParams;\n      for (var _iterator3 = _createForOfIteratorHelperLoose(children), _step3; !(_step3 = _iterator3()).done;) {\n        var _child = _step3.value;\n        if (!_child) {\n          continue;\n        }\n        var key = _child.key || \"key\" + (counter += 1);\n        var init = key === children[0].key;\n        assert(reservedKeys.indexOf(key) === -1, \"Scene name cannot be reserved word: \" + _child.key);\n        var _child$props = _child.props,\n          component = _child$props.component,\n          _child$props$type = _child$props.type,\n          type = _child$props$type === void 0 ? tabs || drawer ? 'jump' : 'push' : _child$props$type,\n          path = _child$props.path,\n          onEnter = _child$props.onEnter,\n          onExit = _child$props.onExit,\n          on = _child$props.on,\n          failure = _child$props.failure,\n          success = _child$props.success,\n          wrap = _child$props.wrap,\n          _child$props$initial = _child$props.initial,\n          initial = _child$props$initial === void 0 ? false : _child$props$initial,\n          props = _objectWithoutProperties(_child$props, [\"component\", \"type\", \"path\", \"onEnter\", \"onExit\", \"on\", \"failure\", \"success\", \"wrap\", \"initial\"]);\n        if (!_this3.states[key]) {\n          _this3.states[key] = {};\n        }\n        for (var _i5 = 0, _Object$keys3 = Object.keys(props); _i5 < _Object$keys3.length; _i5++) {\n          var transition = _Object$keys3[_i5];\n          if (reservedKeys.indexOf(transition) === -1 && props[transition] instanceof Function) {\n            _this3.states[key][transition] = props[transition];\n          }\n        }\n        delete props.children;\n        if (success) {\n          _this3.states[key].success = success instanceof Function ? success : _this3.createAction(success);\n        }\n        if (failure) {\n          _this3.states[key].failure = failure instanceof Function ? failure : _this3.createAction(failure);\n        }\n        if (path) {\n          _this3.states[key].path = path;\n        }\n        var screen = {\n          screen: createWrapper(component, wrapBy, _this3) || _this3.processScene(_child, commonProps, clones) || lightbox && function () {\n            return null;\n          },\n          navigationOptions: createNavigationOptions(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, commonProps), {}, {\n            hideNavBar: parentProps.hideNavBar\n          }, getProperties(component)), _child.props), {}, {\n            init: init,\n            component: component\n          }))\n        };\n        var wrapNavBar = drawer || tabs && !navigator && !renderer || wrap;\n        if (wrap === false || commonProps.wrap === false) {\n          wrapNavBar = false;\n        }\n        if (component && wrapNavBar) {\n          res[key] = {\n            screen: _this3.processScene({\n              key: key,\n              props: {\n                children: {\n                  key: \"_\" + key,\n                  props: _objectSpread(_objectSpread({}, _child.props), {}, {\n                    wrap: false\n                  })\n                }\n              }\n            }, commonProps, clones, wrapBy),\n            navigationOptions: createNavigationOptions(_objectSpread(_objectSpread(_objectSpread({}, commonProps), _child.props), {}, {\n              hideNavBar: true\n            }))\n          };\n        } else {\n          res[key] = screen;\n        }\n        props.init = true;\n        if (!_this3[key]) {\n          _this3.isLogical[key] = !!component;\n          _this3[key] = new Function('actions', 'props', 'type', \"return function \" + key.replace(/\\W/g, '_') + \"(params){ actions.execute(type, '\" + key + \"', props, params)}\")(_this3, _objectSpread(_objectSpread({\n            error: ''\n          }, commonProps), props), type);\n        }\n        if ((onEnter || on || component && component.onEnter) && !_this3[key + OnEnter]) {\n          _this3[key + OnEnter] = onEnter || on || component.onEnter;\n        }\n        if ((onExit || component && component.onExit) && !_this3[key + OnExit]) {\n          _this3[key + OnExit] = onExit || component.onExit;\n        }\n        order.push(key);\n        if (initial || _child.props.initial || !initialRouteName) {\n          initialRouteName = key;\n          initialRouteParams = _objectSpread(_objectSpread({}, commonProps), props);\n        }\n      }\n      var mode = modal ? 'modal' : 'card';\n      var navigationConfig = _objectSpread(_objectSpread({\n        lazy: lazy,\n        initialRouteName: initialRouteName,\n        initialRouteParams: initialRouteParams,\n        contentComponent: contentComponent,\n        order: order\n      }, commonProps), {}, {\n        navigationOptions: createNavigationOptions(commonProps)\n      });\n      if (navigator) {\n        return navigator(res, navigationConfig);\n      }\n      if (renderer) {\n        return tabs ? createTabNavigatorHOC(renderer)(res, navigationConfig) : createStackNavigatorHOC(renderer)(res, navigationConfig);\n      }\n      if (lightbox) {\n        return createStackNavigatorHOC(LightboxRenderer)(res, _objectSpread(_objectSpread({\n          mode: mode,\n          initialRouteParams: initialRouteParams,\n          initialRouteName: initialRouteName\n        }, commonProps), {}, {\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n      if (tabs) {\n        var createTabNavigator = createMaterialTopTabNavigator;\n        if (tabBarPosition !== 'top') {\n          createTabNavigator = createBottomTabNavigator;\n        }\n        return createTabNavigator(res, _objectSpread(_objectSpread({\n          lazy: lazy,\n          tabBarComponent: tabBarComponent,\n          initialRouteName: initialRouteName,\n          initialRouteParams: initialRouteParams,\n          tabBarPosition: tabBarPosition,\n          order: order\n        }, commonProps), {}, {\n          tabBarOptions: createTabBarOptions(commonProps),\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n      if (drawer) {\n        var config = _objectSpread({\n          initialRouteName: initialRouteName,\n          contentComponent: contentComponent,\n          order: order,\n          drawerOpenRoute: 'DrawerOpen',\n          drawerCloseRoute: 'DrawerClose',\n          drawerToggleRoute: 'DrawerToggle'\n        }, commonProps);\n        if (drawerWidth) {\n          config.drawerWidth = drawerWidth;\n        }\n        if (drawerLockMode) {\n          config.drawerLockMode = drawerLockMode;\n        }\n        return createDrawerNavigator(res, config);\n      }\n      if (overlay) {\n        return createTabNavigatorHOC(OverlayRenderer)(res, _objectSpread(_objectSpread({\n          lazy: lazy,\n          initialRouteName: initialRouteName,\n          contentComponent: contentComponent,\n          initialRouteParams: initialRouteParams,\n          order: order\n        }, commonProps), {}, {\n          tabBarOptions: createTabBarOptions(commonProps),\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n      return createStackNavigator(res, _objectSpread(_objectSpread({\n        mode: mode,\n        initialRouteParams: initialRouteParams,\n        initialRouteName: initialRouteName\n      }, commonProps), {}, {\n        transitionConfig: transitionConfig,\n        navigationOptions: createNavigationOptions(commonProps)\n      }));\n    };\n    this.dispatch = function (action) {\n      if (_this3.externalDispatch) {\n        _this3.externalAction = action;\n        _this3.externalDispatch(action);\n      } else if (_this3._navigator) {\n        _this3._navigator.dispatch(action);\n      }\n    };\n    this.execute = function (actionType, routeName) {\n      for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        params[_key - 2] = arguments[_key];\n      }\n      var res = uniteParams(routeName, params);\n      var overridenType = res.type || actionType;\n      var type = actionMap[overridenType] || overridenType;\n      if (type === 'pop') {\n        _this3[type](res);\n      } else {\n        _this3[type](routeName, res);\n      }\n    };\n    this.push = function (routeName, data) {\n      var params = filterParam(data);\n      _this3.dispatch({\n        type: StackActions.PUSH,\n        routeName: routeName,\n        params: params\n      });\n    };\n    this.jump = function (routeName, data) {\n      var params = filterParam(data);\n      _this3.dispatch({\n        type: NavigationActions.NAVIGATE,\n        routeName: routeName,\n        params: params\n      });\n    };\n    this.drawerOpen = function () {\n      _this3.dispatch(DrawerActions.openDrawer());\n    };\n    this.drawerClose = function () {\n      _this3.dispatch(DrawerActions.closeDrawer());\n    };\n    this.drawerToggle = function () {\n      _this3.dispatch(DrawerActions.toggleDrawer());\n    };\n    this.refresh = function (data) {\n      var sceneKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var params = filterParam(data);\n      var _getActiveState = getActiveState(_this3.state),\n        key = _getActiveState.key;\n      _this3.dispatch(NavigationActions.setParams({\n        key: sceneKey || key,\n        params: params\n      }));\n    };\n    this.pop = function () {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        timeout = _ref5.timeout,\n        key = _ref5.key,\n        params = _objectWithoutProperties(_ref5, [\"timeout\", \"key\"]);\n      var res = filterParam(params);\n      if (timeout) {\n        setTimeout(function () {\n          return _this3.pop(params);\n        }, timeout);\n      } else {\n        _this3.dispatch(NavigationActions.back({\n          key: key\n        }));\n        if (res.refresh) {\n          _this3.refresh(res.refresh);\n        }\n      }\n      return true;\n    };\n    this.popTo = function (routeName, data) {\n      var params = filterParam(data);\n      _this3.dispatch({\n        type: ActionConst.POP_TO,\n        routeName: routeName,\n        params: params\n      });\n    };\n    this.popAndPush = function (routeName, data) {\n      var params = filterParam(data);\n      _this3.dispatch({\n        type: ActionConst.POP_AND_PUSH,\n        routeName: routeName,\n        params: params\n      });\n    };\n    this.replace = function (routeName, data) {\n      var params = filterParam(data);\n      _this3.dispatch({\n        type: ActionConst.REPLACE,\n        routeName: routeName,\n        params: params\n      });\n    };\n    this.reset = function (routeName, data) {\n      var params = filterParam(data);\n      var parent = getParent(_this3.state, routeName);\n      _this3.dispatch(StackActions.reset({\n        index: 0,\n        key: parent ? parent.key : null,\n        actions: [NavigationActions.navigate({\n          routeName: routeName,\n          params: params\n        })]\n      }));\n    };\n  }\n  _createClass(NavigationStore, [{\n    key: \"externalState\",\n    set: function set(state) {\n      if (state && this.externalDispatch) {\n        this.onNavigationStateChange(this.state, state, this.externalAction);\n        this.state = state;\n      }\n    }\n  }]);\n  return NavigationStore;\n}();\nexport default new NavigationStore();","map":{"version":3,"names":["React","Image","Animated","Easing","createAppContainer","NavigationActions","StackActions","createStackNavigator","createDrawerNavigator","DrawerActions","createMaterialTopTabNavigator","createBottomTabNavigator","PropTypes","createReducer","ActionConst","OnEnter","OnExit","assert","LeftButton","RightButton","BackButton","LightboxRenderer","_drawerImage","getActiveState","getParent","getRouteNameByKey","Modal","Lightbox","Drawer","Tabs","Overlay","OverlayRenderer","createStackNavigatorHOC","createTabNavigatorHOC","RightNavBarButton","LeftNavBarButton","BackNavBarButton","counter","actionMap","_actionMap","_defineProperty","JUMP","PUSH","REPLACE","BACK","BACK_ACTION","POP_TO","REFRESH","RESET","PUSH_OR_POP","reservedKeys","dontInheritKeys","getValue","value","params","Function","getProperties","component","arguments","length","undefined","res","_i","_reservedKeys","key","children","createTabBarOptions","_ref","tabBarStyle","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","labelStyle","tabStyle","props","_objectWithoutProperties","_objectSpread","style","createNavigationOptions","_this","back","backButtonImage","backButtonTextStyle","backTitle","backTitleEnabled","backToInitial","drawerIcon","drawerImage","drawerPosition","getTitle","headerLayoutPreset","headerStyle","headerTitleStyle","hideDrawerButton","hideNavBar","hideTabBar","icon","init","left","leftButton","leftButtonImage","leftButtonTextStyle","leftTitle","navBar","navBarButtonColor","navigationBarStyle","navigationBarTitleImage","navigationBarTitleImageStyle","navTransparent","onLeft","onRight","panHandlers","renderBackButton","renderNavigationBar","renderTitle","right","rightButton","rightButtonImage","rightButtonTextStyle","rightTitle","tabBarIcon","tabBarLabel","title","titleStyle","NavBar","navigationOptions","_ref2","navigation","screenProps","navigationParams","state","headerBackImage","headerBackTitle","headerBackTitleEnabled","headerLeft","renderLeftButton","headerRight","renderRightButton","headerTintColor","tintColor","headerTitle","NavBarFromParams","header","data","createElement","_extends","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","gesturesEnabled","source","Icon","componentData","_i2","_arr","routeParams","routes","index","tabBarVisible","headerTransparent","userDefinedTabBarOnPress","tabBarOnPress","console","warn","dispatch","popToTop","defaultHandler","originalRouteName","routeName","startsWith","substring","isStatelessComponent","Component","prototype","render","extendProps","store","_loop","transition","indexOf","charAt","_i3","_Object$keys","Object","keys","createWrapper","wrapBy","wrapper","Wrapped","_React$Component","_inherits","_super","_createSuper","_this2","_classCallCheck","call","onRef","bind","_assertThisInitialized","_createClass","componentDidMount","ref","addRef","onEnter","componentWillUnmount","deleteRef","onExit","name","propTypes","shape","isRequired","StatelessWrapped","_ref3","filterParam","toString","proto","constructor","uniteParams","_iterator","_createForOfIteratorHelperLoose","_step","done","param","defaultSuccess","defaultFailure","NavigationStore","_this3","getStateForAction","reducer","_navigator","externalDispatch","externalState","prevState","externalAction","refs","states","isLogical","setCustomReducer","Navigator","router","cmd","onEnterHandler","_callee","currentScene","handler","success","failure","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","currentParams","sent","t0","error","message","stop","Promise","onExitHandler","prevScene","exitHandler","then","e","onNavigationStateChange","_callee2","currentState","action","activeState","_callee2$","_context2","setTimeout","type","FOCUS","onStateChange","setTopLevelNavigator","navigatorRef","create","scene","Array","isArray","processScene","createAction","args","_ref4","inheritProps","clones","order","_scene$props","navigator","renderer","contentComponent","drawerWidth","drawerLockMode","tabBarPosition","lazy","duration","parentProps","tabs","modal","lightbox","overlay","drawer","transitionConfig","tabBarComponent","transitionSpec","timing","easing","step0","commonProps","_i4","_Object$keys2","pkey","includes","concat","apply","_toConsumableArray","push","_iterator2","_step2","child","clone","initialRouteName","initialRouteParams","_iterator3","_step3","_child$props","_child$props$type","path","on","wrap","_child$props$initial","initial","_i5","_Object$keys3","screen","wrapNavBar","replace","mode","navigationConfig","createTabNavigator","tabBarOptions","config","drawerOpenRoute","drawerCloseRoute","drawerToggleRoute","execute","actionType","_len","_key","overridenType","jump","NAVIGATE","drawerOpen","openDrawer","drawerClose","closeDrawer","drawerToggle","toggleDrawer","refresh","sceneKey","_getActiveState","setParams","pop","_ref5","timeout","popTo","popAndPush","POP_AND_PUSH","reset","parent","actions","navigate","set"],"sources":["C:/Users/adamk/Downloads/kasino9/node_modules/react-native-router-flux/src/navigationStore.js"],"sourcesContent":["import React from 'react';\nimport { Image, Animated, Easing } from 'react-native';\nimport { createAppContainer, NavigationActions, StackActions } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createDrawerNavigator, DrawerActions } from 'react-navigation-drawer';\nimport { createMaterialTopTabNavigator, createBottomTabNavigator } from 'react-navigation-tabs';\nimport PropTypes from 'prop-types';\nimport createReducer from './Reducer';\nimport * as ActionConst from './ActionConst';\nimport { OnEnter, OnExit, assert } from './Util';\nimport { LeftButton, RightButton, BackButton } from './NavBar';\nimport LightboxRenderer from './LightboxRenderer';\nimport _drawerImage from '../images/menu_burger.png';\nimport { getActiveState, getParent, getRouteNameByKey } from './State';\nimport Modal from './Modal';\nimport Lightbox from './Lightbox';\nimport Drawer from './Drawer';\nimport Tabs from './Tabs';\nimport Overlay from './Overlay';\nimport OverlayRenderer from './OverlayRenderer';\nimport createStackNavigatorHOC from './createStackNavigatorHOC';\nimport createTabNavigatorHOC from './createTabNavigatorHOC';\n\nlet RightNavBarButton;\nlet LeftNavBarButton;\nlet BackNavBarButton;\nlet counter = 0;\n\nexport const actionMap = {\n  [ActionConst.JUMP]: 'jump',\n  [ActionConst.PUSH]: 'push',\n  [ActionConst.REPLACE]: 'replace',\n  [ActionConst.BACK]: 'pop',\n  [ActionConst.BACK_ACTION]: 'pop',\n  [ActionConst.POP_TO]: 'popTo',\n  [ActionConst.REFRESH]: 'refresh',\n  [ActionConst.RESET]: 'reset',\n  [ActionConst.PUSH_OR_POP]: 'push',\n};\n\nconst reservedKeys = [\n  'addRef',\n  'back',\n  'children',\n  'create',\n  'dispatch',\n  'drawerClose',\n  'drawerOpen',\n  'execute',\n  'left',\n  'leftButton',\n  'navBar',\n  'navigate',\n  'on',\n  'onEnter',\n  'onExit',\n  'onLeft',\n  'onRight',\n  'pop',\n  'popTo',\n  'push',\n  'refresh',\n  'refs',\n  'removeRef',\n  'renderLeftButton',\n  'renderRightButton',\n  'renderTitle',\n  'replace',\n  'right',\n  'rightButton',\n  'run',\n  'setParams',\n  'title',\n];\n\nconst dontInheritKeys = [\n  'backToInitial',\n  'children',\n  'component',\n  'contentComponent',\n  'drawer',\n  'hideNavBar',\n  'hideTabBar',\n  'key',\n  'lightbox',\n  'modal',\n  'navigator',\n  'navTransparent',\n  'overlay',\n  'ref',\n  'style',\n  'tabBarComponent',\n  'tabs',\n  'title',\n  'type',\n];\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nfunction getProperties(component = {}) {\n  const res = {};\n  for (const key of reservedKeys) {\n    if (component[key]) {\n      res[key] = component[key];\n    }\n  }\n  delete res.children;\n  return res;\n}\nfunction createTabBarOptions({\n  tabBarStyle, activeTintColor, inactiveTintColor, activeBackgroundColor, inactiveBackgroundColor, showLabel, labelStyle, tabStyle, ...props\n}) {\n  return {\n    ...props,\n    style: tabBarStyle,\n    activeTintColor,\n    inactiveTintColor,\n    activeBackgroundColor,\n    inactiveBackgroundColor,\n    showLabel,\n    labelStyle,\n    tabStyle,\n  };\n}\nfunction createNavigationOptions(params) {\n  const {\n    back,\n    backButtonImage,\n    backButtonTextStyle,\n    backTitle,\n    backTitleEnabled,\n    backToInitial,\n    component,\n    drawerIcon,\n    drawerImage,\n    drawerPosition,\n    getTitle,\n    headerLayoutPreset,\n    headerStyle,\n    headerTitleStyle,\n    hideDrawerButton,\n    hideNavBar,\n    hideTabBar,\n    icon,\n    init,\n    left,\n    leftButton,\n    leftButtonImage,\n    leftButtonTextStyle,\n    leftTitle,\n    navBar,\n    navBarButtonColor,\n    navigationBarStyle,\n    navigationBarTitleImage,\n    navigationBarTitleImageStyle,\n    navTransparent,\n    onLeft,\n    onRight,\n    panHandlers,\n    renderBackButton,\n    renderNavigationBar,\n    renderTitle,\n    right,\n    rightButton,\n    rightButtonImage,\n    rightButtonTextStyle,\n    rightTitle,\n    tabBarIcon,\n    tabBarLabel,\n    title,\n    titleStyle,\n    ...props\n  } = params;\n  const NavBar = renderNavigationBar || navBar;\n  if (component && component.navigationOptions) {\n    return component.navigationOptions;\n  }\n  return ({ navigation, screenProps }) => {\n    const navigationParams = navigation.state.params || {};\n    const state = {\n      navigation,\n      ...params,\n      ...navigationParams,\n      ...screenProps,\n    };\n    const res = {\n      ...props,\n      headerBackImage: navigationParams.backButtonImage || backButtonImage,\n      headerBackTitle: getValue(navigationParams.backTitle || backTitle, state),\n      headerBackTitleEnabled: navigationParams.backTitleEnabled || backTitleEnabled,\n      headerLayoutPreset: navigationParams.headerLayoutPreset || headerLayoutPreset,\n      headerLeft: getValue(navigationParams.left || left || leftButton || params.renderLeftButton, state),\n      headerRight: getValue(navigationParams.right || right || rightButton || params.renderRightButton, state),\n      headerStyle: getValue(navigationParams.headerStyle || headerStyle || navigationBarStyle, state),\n      headerTintColor: navBarButtonColor || props.tintColor || navigationParams.tintColor || navigationParams.headerTintColor,\n      headerTitle: getValue(navigationParams.renderTitle || renderTitle || params.renderTitle, state),\n      headerTitleStyle: headerTitleStyle || titleStyle,\n      title: getValue(navigationParams.title || title || getTitle, state),\n    };\n\n    const NavBarFromParams = navigationParams.renderNavigationBar || navigationParams.navBar;\n    if (NavBarFromParams != null) {\n      if (NavBarFromParams) {\n        res.header = data => <NavBarFromParams navigation={navigation} {...state} {...data} />;\n      }\n    } else if (NavBar) {\n      res.header = data => <NavBar navigation={navigation} {...state} {...data} />;\n    }\n\n    if (typeof navigationParams.panHandlers !== 'undefined') {\n      if (navigationParams.panHandlers === null) {\n        res.gesturesEnabled = false;\n      }\n    } else if (panHandlers === null) {\n      res.gesturesEnabled = false;\n    }\n\n    if (navigationBarTitleImage) {\n      res.headerTitle = <Image source={navigationBarTitleImage} style={navigationBarTitleImageStyle} />;\n    }\n\n    if (tabBarLabel) {\n      res.tabBarLabel = tabBarLabel;\n    }\n\n    if (tabBarIcon || icon) {\n      const Icon = tabBarIcon || icon;\n      res.tabBarIcon = data => <Icon {...state} {...data} />;\n    }\n    const componentData = {};\n    // copy all component static functions\n    if (component) {\n      for (const key of [\n        'onRight',\n        'onLeft',\n        'rightButton',\n        'leftButton',\n        'leftTitle',\n        'rightTitle',\n        'rightButtonImage',\n        'leftButtonImage',\n        'rightButtonTextStyle',\n        'leftButtonTextStyle',\n        'rightButtonIconStyle',\n        'leftButtonIconStyle',\n        'leftButtonTintColor',\n        'rightButtonTintColor',\n      ]) {\n        if (component[key]) {\n          componentData[key] = component[key];\n        }\n      }\n    }\n\n    if (\n      rightButtonImage\n      || rightTitle\n      || params.renderRightButton\n      || onRight\n      || navigationParams.onRight\n      || navigationParams.rightTitle\n      || navigationParams.rightButtonImage\n      || rightButtonTextStyle\n      || ((drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition === 'right')\n    ) {\n      res.headerRight = getValue(navigationParams.right || navigationParams.rightButton || params.renderRightButton, { ...navigationParams, ...screenProps }) || (\n        <RightNavBarButton navigation={navigation} {...params} {...navigationParams} {...componentData} />\n      );\n    }\n\n    if (\n      leftButtonImage\n      || backButtonImage\n      || backTitle\n      || leftTitle\n      || params.renderLeftButton\n      || leftButtonTextStyle\n      || renderBackButton\n      || backButtonTextStyle\n      || onLeft\n      || navigationParams.leftTitle\n      || navigationParams.onLeft\n      || navigationParams.leftButtonImage\n      || navigationParams.backButtonImage\n      || navigationParams.backTitle\n      || ((drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition !== 'right')\n    ) {\n      const leftButton = navigationParams.left || navigationParams.leftButton || params.renderLeftButton;\n      res.headerLeft = getValue(leftButton, { ...params, ...navigationParams, ...screenProps })\n        || (((onLeft && (leftTitle || navigationParams.leftTitle || leftButtonImage || navigationParams.leftButtonImage)) || drawerImage || drawerIcon) && (\n          <LeftNavBarButton navigation={navigation} {...params} {...navigationParams} {...componentData} />\n        ))\n        || res.headerLeft\n        || (init ? null : (!leftButton && renderBackButton && renderBackButton(state)) || (!leftButton && <BackNavBarButton navigation={navigation} {...state} />))\n        || null;\n    }\n\n    if (back) {\n      res.headerLeft = (renderBackButton && renderBackButton(state)) || <BackNavBarButton navigation={navigation} {...state} />;\n    }\n\n    if (typeof navigationParams.left !== 'undefined' || typeof navigationParams.leftButton !== 'undefined' || typeof navigationParams.renderLeftButton !== 'undefined') {\n      if (navigationParams.left === null || navigationParams.leftButton === null || navigationParams.renderLeftButton === null) {\n        res.headerLeft = null;\n      }\n    }\n\n    // currect dynamic navigation params has priority over static scene params\n    // but taking them into account only if they are explicitly set (not null or undefined)\n    const routeParams = navigation.state.routes && navigation.state.routes[navigation.state.index].params;\n    if (navigationParams.hideTabBar != null) {\n      if (navigationParams.hideTabBar) {\n        res.tabBarVisible = false;\n      }\n    } else if (hideTabBar) {\n      res.tabBarVisible = false;\n    } else if (routeParams && routeParams.hideTabBar) {\n      res.tabBarVisible = false;\n    }\n\n    if (navigationParams.hideNavBar != null) {\n      if (navigationParams.hideNavBar) {\n        res.header = null;\n      }\n    } else if (hideNavBar) {\n      res.header = null;\n    }\n\n    if (navTransparent) {\n      res.headerTransparent = true;\n      res.headerStyle = {};\n    }\n\n    if (backToInitial) {\n      const userDefinedTabBarOnPress = res.tabBarOnPress;\n      res.tabBarOnPress = (data) => {\n        if (userDefinedTabBarOnPress) {\n          console.warn('backToInitial and tabBarOnPress were both defined and might cause unexpected navigation behaviors. I hope you know what you are doing ;-)');\n          userDefinedTabBarOnPress(data);\n        }\n        if (data.navigation && data.navigation.state.index !== 0) {\n          data.navigation.dispatch(StackActions.popToTop());\n        } else {\n          data.defaultHandler();\n        }\n      };\n    }\n    return res;\n  };\n}\nfunction originalRouteName(routeName) {\n  if (routeName.startsWith('_')) {\n    return routeName.substring(1);\n  }\n  return routeName;\n}\nfunction isStatelessComponent(Component) {\n  return !Component.prototype || typeof Component.prototype.render !== 'function';\n}\nfunction extendProps(props, store: NavigationStore) {\n  if (!props) {\n    return {};\n  }\n  const res = { ...props };\n  for (const transition of Object.keys(props)) {\n    if (\n      reservedKeys.indexOf(transition) === -1\n      && transition.startsWith('on')\n      && transition.charAt(2) >= 'A'\n      && transition.charAt(2) <= 'Z'\n      && typeof props[transition] === 'string'\n    ) {\n      if (store[props[transition]]) {\n        res[transition] = params => store[props[transition]](params);\n      }\n    }\n  }\n  return res;\n}\n// eslint no-param-reassign: \"error\"\nfunction createWrapper(Component, wrapBy, store: NavigationStore) {\n  if (!Component) {\n    return null;\n  }\n  const wrapper = wrapBy || (props => props);\n\n  // detect if the component is not functional stateless\n  // not sure if Component can be string-defined (\"div\") here\n  // may be there is a better way to detect stateless function component, but this should work\n  if (!isStatelessComponent(Component)) {\n    class Wrapped extends React.Component {\n      static propTypes = {\n        navigation: PropTypes.shape().isRequired,\n      };\n\n      constructor() {\n        super();\n        this.onRef = this.onRef.bind(this);\n      }\n\n      componentDidMount() {\n        const { navigation } = this.props;\n        if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n          store.addRef(originalRouteName(navigation.state.routeName), this.ref);\n        }\n        if (this.ref && this.ref.onEnter) {\n          this.ref.onEnter(navigation && navigation.state);\n        }\n      }\n\n      componentWillUnmount() {\n        const { navigation } = this.props;\n        if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n          store.deleteRef(originalRouteName(navigation.state.routeName));\n        }\n        if (this.ref && this.ref.onExit) {\n          this.ref.onExit(navigation && navigation.state);\n        }\n        this.ref = null;\n      }\n\n      onRef(ref) {\n        this.ref = ref;\n      }\n\n      render() {\n        const { navigation } = this.props;\n        if (!navigation || !navigation.state) {\n          return <Component ref={this.onRef} {...this.props} />;\n        }\n        return <Component ref={this.onRef} {...this.props} {...extendProps(navigation.state.params, store)} name={navigation.state.routeName} />;\n      }\n    }\n    return wrapper(Wrapped);\n  }\n\n  // if component is statless function, ref is not supported\n  function StatelessWrapped({ navigation, ...props }) {\n    return <Component {...props} navigation={navigation} {...extendProps(navigation.state.params, store)} name={navigation.state.routeName} />;\n  }\n  StatelessWrapped.propTypes = {\n    navigation: PropTypes.shape().isRequired,\n  };\n  return wrapper(StatelessWrapped);\n}\n\nfunction filterParam(data = {}) {\n  if (data.toString() !== '[object Object]') {\n    return { data };\n  }\n  const proto = (data || {}).constructor.name;\n  // avoid passing React Native parameters\n  if (!data || proto !== 'Object') {\n    return {};\n  }\n  return data;\n}\n\nfunction uniteParams(routeName, params) {\n  let res = {};\n  for (const param of params) {\n    if (param) {\n      res = { ...res, ...filterParam(param) };\n    }\n  }\n  res.routeName = routeName;\n  return res;\n}\n\nconst defaultSuccess = () => {};\nconst defaultFailure = () => {};\n\nclass NavigationStore {\n  getStateForAction = null;\n\n  reducer = null;\n\n  _navigator = null;\n\n  externalDispatch = null;\n\n  externalState = null;\n\n  prevState = null;\n\n  externalAction = {};\n\n  refs = {};\n\n  states = {};\n\n  isLogical = {};\n\n  currentScene;\n\n  prevScene;\n\n  currentParams;\n\n  onStateChange;\n\n  set externalState(state) {\n    if (state && this.externalDispatch) {\n      this.onNavigationStateChange(this.state, state, this.externalAction);\n      this.state = state;\n    }\n  }\n\n  setCustomReducer = (Navigator) => {\n    this.getStateForAction = Navigator.router.getStateForAction;\n    const reducer = createReducer();\n    Navigator.router.getStateForAction = (cmd, state) => (this.reducer ? this.reducer(state, cmd) : reducer(state, cmd));\n  };\n\n  onEnterHandler = async (currentScene) => {\n    if (this.states[currentScene]) {\n      const handler = this[currentScene + OnEnter];\n      const success = this.states[currentScene].success || defaultSuccess;\n      const failure = this.states[currentScene].failure || defaultFailure;\n      if (handler) {\n        try {\n          const res = await handler(this.currentParams, this.state);\n          if (res) {\n            success(res);\n          } else {\n            failure();\n          }\n        } catch (e) {\n          failure({ error: e.message });\n        }\n      }\n    }\n  };\n\n  onExitHandler = (prevScene) => {\n    if (prevScene) {\n      const exitHandler = this[prevScene + OnExit];\n      if (exitHandler) {\n        try {\n          const res = exitHandler(this.state);\n          if (res instanceof Promise) {\n            res.then(defaultSuccess, defaultFailure);\n          }\n        } catch (e) {\n          console.error('Error during onExit handler:', e);\n        }\n      }\n    }\n  };\n\n  onNavigationStateChange = async (prevState, currentState, action) => {\n    this.state = currentState;\n    this.prevState = prevState;\n    const activeState = getActiveState(this.state);\n    const currentScene = activeState.routeName;\n    this.currentParams = { ...activeState.params, ...action.params };\n    this.currentScene = currentScene;\n    this.prevScene = this.prevState ? getActiveState(this.prevState).routeName : null;\n    if (this.currentScene !== this.prevScene) {\n      // run onExit for old scene\n      this.onExitHandler(this.prevScene);\n      setTimeout(() => this.dispatch({\n        type: ActionConst.FOCUS,\n        routeName: this.currentScene,\n        params: this.currentParams,\n      }));\n      this.onEnterHandler(currentScene);\n    } else {\n      const routeName = getRouteNameByKey(this.state, action.key);\n      if (action.type === 'Navigation/DRAWER_OPENED') {\n        this.onEnterHandler(routeName);\n      } else if (action.type === 'Navigation/DRAWER_CLOSED') {\n        this.onExitHandler(routeName);\n      }\n    }\n    if (this.onStateChange) {\n      this.onStateChange(prevState, currentState, action);\n    }\n  };\n\n  setTopLevelNavigator = (navigatorRef) => {\n    this._navigator = navigatorRef;\n  };\n\n  addRef = (name, ref) => {\n    this.refs[name] = ref;\n  };\n\n  deleteRef = (name) => {\n    delete this.refs[name];\n  };\n\n  create = (scene: Scene, params = {}, wrapBy = props => props) => {\n    assert(!Array.isArray(scene), 'Router should contain only one scene, please wrap your scenes with root Scene ');\n    RightNavBarButton = wrapBy(RightButton);\n    LeftNavBarButton = wrapBy(LeftButton);\n    BackNavBarButton = wrapBy(BackButton);\n    const Navigator = this.processScene(scene, params, [], wrapBy);\n    // set initial state\n    this.onNavigationStateChange(null, Navigator.router.getStateForAction(NavigationActions.init()), NavigationActions.init());\n    this.setCustomReducer(Navigator);\n\n    return createAppContainer(Navigator);\n  };\n\n  createAction = name => (args) => {\n    // console.log(`Transition to state=${name}`);\n    if (this.isLogical[name]) {\n      this[name](args);\n    } else {\n      setTimeout(() => this[name](args));\n    }\n  };\n\n  processScene = (scene: Scene, inheritProps = {}, clones = [], wrapBy) => {\n    assert(scene.props, 'props should be defined');\n    if (!scene.props.children) {\n      return null;\n    }\n    const res = {};\n    const order = [];\n    const {\n      navigator, renderer, contentComponent, drawerWidth, drawerLockMode, tabBarPosition, lazy, duration, ...parentProps\n    } = scene.props;\n    let {\n      tabs, modal, lightbox, overlay, drawer, transitionConfig, tabBarComponent,\n    } = parentProps;\n    if (scene.type === Modal) {\n      modal = true;\n    } else if (scene.type === Drawer) {\n      drawer = true;\n    } else if (scene.type === Lightbox) {\n      lightbox = true;\n    } else if (scene.type === Tabs) {\n      tabs = true;\n    } else if (scene.type === Overlay) {\n      overlay = true;\n    }\n\n    if (duration !== undefined && !transitionConfig) {\n      transitionConfig = () => ({\n        transitionSpec: {\n          duration,\n          timing: Animated.timing,\n          easing: Easing.step0,\n        },\n      });\n    }\n\n    const commonProps = { ...inheritProps, ...parentProps };\n    delete commonProps.children;\n    delete commonProps.component;\n    // add inherit props\n    for (const pkey of Object.keys(commonProps)) {\n      if (dontInheritKeys.includes(pkey) && (pkey === 'type' || pkey === 'hideNavBar' || !parentProps[pkey])) {\n        delete commonProps[pkey];\n      }\n    }\n\n    if (drawer) {\n      commonProps.drawerImage = commonProps.drawerImage || _drawerImage;\n    }\n\n    const children = !Array.isArray(parentProps.children) ? [parentProps.children] : [].concat(...parentProps.children);\n    // add clone scenes\n    if (!drawer && !tabs && !overlay) {\n      children.push(...clones);\n    }\n    // add all clones\n    for (const child of children) {\n      if (child && child.props.clone) {\n        if (clones.indexOf(child) === -1) {\n          clones.push(child);\n        }\n      }\n    }\n    let initialRouteName;\n    let initialRouteParams;\n    for (const child of children) {\n      // allow null/false child, useful for conditionals\n      if (!child) {\n        continue;\n      }\n      const key = child.key || `key${(counter += 1)}`;\n      const init = key === children[0].key;\n      assert(reservedKeys.indexOf(key) === -1, `Scene name cannot be reserved word: ${child.key}`);\n      const {\n        component, type = tabs || drawer ? 'jump' : 'push', path, onEnter, onExit, on, failure, success, wrap, initial = false, ...props\n      } = child.props;\n      if (!this.states[key]) {\n        this.states[key] = {};\n      }\n      for (const transition of Object.keys(props)) {\n        if (reservedKeys.indexOf(transition) === -1 && props[transition] instanceof Function) {\n          this.states[key][transition] = props[transition];\n        }\n      }\n      delete props.children;\n      if (success) {\n        this.states[key].success = success instanceof Function ? success : this.createAction(success);\n      }\n      if (failure) {\n        this.states[key].failure = failure instanceof Function ? failure : this.createAction(failure);\n      }\n      if (path) {\n        this.states[key].path = path;\n      }\n      // console.log(`KEY ${key} LEGACY {legacy} PATH ${path} DRAWER ${drawer} TABS ${tabs} WRAP ${wrap}`, JSON.stringify(commonProps));\n      const screen = {\n        screen: createWrapper(component, wrapBy, this) || this.processScene(child, commonProps, clones) || (lightbox && (() => null)),\n        navigationOptions: createNavigationOptions({\n          ...commonProps,\n          hideNavBar: parentProps.hideNavBar,\n          ...getProperties(component),\n          ...child.props,\n          init,\n          component,\n        }),\n      };\n\n      // wrap component inside own navbar for tabs/drawer parent controllers\n      // don't wrap child scenes for custom navigators/renderers\n      let wrapNavBar = drawer || (tabs && !navigator && !renderer) || wrap;\n      if (wrap === false || commonProps.wrap === false) {\n        wrapNavBar = false;\n      }\n      if (component && wrapNavBar) {\n        res[key] = {\n          screen: this.processScene(\n            {\n              key,\n              props: {\n                children: {\n                  key: `_${key}`,\n                  props: { ...child.props, wrap: false },\n                },\n              },\n            },\n            commonProps,\n            clones,\n            wrapBy,\n          ),\n          navigationOptions: createNavigationOptions({\n            ...commonProps,\n            ...child.props,\n            hideNavBar: true,\n          }),\n        };\n      } else {\n        res[key] = screen;\n      }\n\n      // a bit of magic, create all 'actions'-shortcuts inside navigationStore\n      props.init = true;\n      if (!this[key]) {\n        this.isLogical[key] = !!component;\n        this[key] = new Function(\n          'actions',\n          'props',\n          'type',\n          `return function ${\n            key.replace(/\\W/g, '_') // eslint-disable-line no-new-func\n          }(params){ actions.execute(type, '${key}', props, params)}`,\n        )(this, { error: '', ...commonProps, ...props }, type);\n      }\n\n      if ((onEnter || on || (component && component.onEnter)) && !this[key + OnEnter]) {\n        this[key + OnEnter] = onEnter || on || component.onEnter;\n      }\n\n      if ((onExit || (component && component.onExit)) && !this[key + OnExit]) {\n        this[key + OnExit] = onExit || component.onExit;\n      }\n\n      order.push(key);\n      if (initial || child.props.initial || !initialRouteName) {\n        initialRouteName = key;\n        initialRouteParams = { ...commonProps, ...props };\n      }\n    }\n    const mode = modal ? 'modal' : 'card';\n    const navigationConfig = {\n      lazy,\n      initialRouteName,\n      initialRouteParams,\n      contentComponent,\n      order,\n      ...commonProps,\n      navigationOptions: createNavigationOptions(commonProps),\n    };\n    if (navigator) {\n      return navigator(res, navigationConfig);\n    }\n    if (renderer) {\n      return tabs ? createTabNavigatorHOC(renderer)(res, navigationConfig) : createStackNavigatorHOC(renderer)(res, navigationConfig);\n    }\n    if (lightbox) {\n      return createStackNavigatorHOC(LightboxRenderer)(res, {\n        mode,\n        initialRouteParams,\n        initialRouteName,\n        ...commonProps,\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n\n    if (tabs) {\n      let createTabNavigator = createMaterialTopTabNavigator;\n      if (tabBarPosition !== 'top') {\n        createTabNavigator = createBottomTabNavigator;\n      }\n\n      return createTabNavigator(res, {\n        lazy,\n        tabBarComponent,\n        initialRouteName,\n        initialRouteParams,\n        tabBarPosition,\n        order,\n        ...commonProps,\n        tabBarOptions: createTabBarOptions(commonProps),\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n\n    if (drawer) {\n      const config = {\n        initialRouteName,\n        contentComponent,\n        order,\n        drawerOpenRoute: 'DrawerOpen',\n        drawerCloseRoute: 'DrawerClose',\n        drawerToggleRoute: 'DrawerToggle',\n        ...commonProps,\n      };\n      if (drawerWidth) {\n        config.drawerWidth = drawerWidth;\n      }\n      if (drawerLockMode) {\n        config.drawerLockMode = drawerLockMode;\n      }\n      return createDrawerNavigator(res, config);\n    }\n\n    if (overlay) {\n      return createTabNavigatorHOC(OverlayRenderer)(res, {\n        lazy,\n        initialRouteName,\n        contentComponent,\n        initialRouteParams,\n        order,\n        ...commonProps,\n        tabBarOptions: createTabBarOptions(commonProps),\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n    return createStackNavigator(res, {\n      mode,\n      initialRouteParams,\n      initialRouteName,\n      ...commonProps,\n      transitionConfig,\n      navigationOptions: createNavigationOptions(commonProps),\n    });\n  };\n\n  dispatch = (action) => {\n    if (this.externalDispatch) {\n      this.externalAction = action;\n      this.externalDispatch(action);\n    } else if (this._navigator) {\n      this._navigator.dispatch(action);\n    }\n  };\n\n  execute = (actionType, routeName, ...params) => {\n    const res = uniteParams(routeName, params);\n    const overridenType = res.type || actionType;\n    const type = actionMap[overridenType] || overridenType;\n    if (type === 'pop') {\n      this[type](res);\n    } else {\n      this[type](routeName, res);\n    }\n  };\n\n  push = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: StackActions.PUSH, routeName, params });\n  };\n\n  jump = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: NavigationActions.NAVIGATE, routeName, params });\n  };\n\n  drawerOpen = () => {\n    this.dispatch(DrawerActions.openDrawer());\n  };\n\n  drawerClose = () => {\n    this.dispatch(DrawerActions.closeDrawer());\n  };\n\n  drawerToggle = () => {\n    this.dispatch(DrawerActions.toggleDrawer());\n  };\n\n  refresh = (data, sceneKey = null) => {\n    const params = filterParam(data);\n    const { key } = getActiveState(this.state);\n    this.dispatch(\n      NavigationActions.setParams({\n        key: sceneKey || key,\n        params,\n      }),\n    );\n  };\n\n  pop = ({ timeout, key, ...params } = {}) => {\n    const res = filterParam(params);\n    if (timeout) {\n      setTimeout(() => this.pop(params), timeout);\n    } else {\n      this.dispatch(NavigationActions.back({ key }));\n      if (res.refresh) {\n        this.refresh(res.refresh);\n      }\n    }\n    return true;\n  };\n\n  popTo = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.POP_TO, routeName, params });\n  };\n\n  popAndPush = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.POP_AND_PUSH, routeName, params });\n  };\n\n  replace = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.REPLACE, routeName, params });\n  };\n\n  reset = (routeName, data) => {\n    const params = filterParam(data);\n    const parent = getParent(this.state, routeName);\n    this.dispatch(\n      StackActions.reset({\n        index: 0,\n        key: parent ? parent.key : null,\n        actions: [\n          NavigationActions.navigate({\n            routeName,\n            params,\n          }),\n        ],\n      }),\n    );\n  };\n}\n\nexport default new NavigationStore();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}