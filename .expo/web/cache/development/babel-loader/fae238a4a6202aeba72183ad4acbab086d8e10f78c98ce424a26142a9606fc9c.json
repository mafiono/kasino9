{"ast":null,"code":"export function deepestExplicitValueForKey(navigationState, key) {\n  var current;\n  var selected = navigationState;\n  while ({}.hasOwnProperty.call(selected, 'children')) {\n    if (!selected.tabs) {\n      for (var i = 0; i < selected.index; i += 1) {\n        if (typeof selected.children[i][key] !== 'undefined') {\n          current = selected.children[i][key];\n        }\n      }\n    }\n    selected = selected.children[selected.index];\n    if (typeof selected[key] !== 'undefined') {\n      current = selected[key];\n    }\n  }\n  if (typeof current === 'undefined') {\n    current = navigationState[key];\n  }\n  return current;\n}\nexport function assert(expr, failDescription) {\n  if (!expr) {\n    throw new Error(\"[react-native-router-flux] \" + failDescription);\n  }\n}\nexport var OnEnter = 'onEnter';\nexport var OnExit = 'onExit';","map":{"version":3,"names":["deepestExplicitValueForKey","navigationState","key","current","selected","hasOwnProperty","call","tabs","i","index","children","assert","expr","failDescription","Error","OnEnter","OnExit"],"sources":["C:/Users/adamk/Downloads/kasino9/node_modules/react-native-router-flux/src/Util.js"],"sourcesContent":["// searches for the deepest explicitly set value for a key\n// in a navigationState tree.\nexport function deepestExplicitValueForKey(navigationState, key) {\n  let current;\n  let selected = navigationState;\n\n  while ({}.hasOwnProperty.call(selected, 'children')) {\n    if (!selected.tabs) {\n      // for pushed children, iterate through each, recording key value,\n      // until reaching the selected child\n      for (let i = 0; i < selected.index; i += 1) {\n        if (typeof selected.children[i][key] !== 'undefined') {\n          current = selected.children[i][key];\n        }\n      }\n    }\n    // set the new selected child and check for a key value\n    selected = selected.children[selected.index];\n    if (typeof selected[key] !== 'undefined') {\n      current = selected[key];\n    }\n  }\n\n  // fallback to the root key value\n  if (typeof current === 'undefined') {\n    current = navigationState[key];\n  }\n\n  return current;\n}\n\nexport function assert(expr, failDescription) {\n  if (!expr) {\n    throw new Error(`[react-native-router-flux] ${failDescription}`);\n  }\n}\n\nexport const OnEnter = 'onEnter';\nexport const OnExit = 'onExit';\n"],"mappings":"AAEA,OAAO,SAASA,0BAA0BA,CAACC,eAAe,EAAEC,GAAG,EAAE;EAC/D,IAAIC,OAAO;EACX,IAAIC,QAAQ,GAAGH,eAAe;EAE9B,OAAO,CAAC,CAAC,CAACI,cAAc,CAACC,IAAI,CAACF,QAAQ,EAAE,UAAU,CAAC,EAAE;IACnD,IAAI,CAACA,QAAQ,CAACG,IAAI,EAAE;MAGlB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACK,KAAK,EAAED,CAAC,IAAI,CAAC,EAAE;QAC1C,IAAI,OAAOJ,QAAQ,CAACM,QAAQ,CAACF,CAAC,CAAC,CAACN,GAAG,CAAC,KAAK,WAAW,EAAE;UACpDC,OAAO,GAAGC,QAAQ,CAACM,QAAQ,CAACF,CAAC,CAAC,CAACN,GAAG,CAAC;QACrC;MACF;IACF;IAEAE,QAAQ,GAAGA,QAAQ,CAACM,QAAQ,CAACN,QAAQ,CAACK,KAAK,CAAC;IAC5C,IAAI,OAAOL,QAAQ,CAACF,GAAG,CAAC,KAAK,WAAW,EAAE;MACxCC,OAAO,GAAGC,QAAQ,CAACF,GAAG,CAAC;IACzB;EACF;EAGA,IAAI,OAAOC,OAAO,KAAK,WAAW,EAAE;IAClCA,OAAO,GAAGF,eAAe,CAACC,GAAG,CAAC;EAChC;EAEA,OAAOC,OAAO;AAChB;AAEA,OAAO,SAASQ,MAAMA,CAACC,IAAI,EAAEC,eAAe,EAAE;EAC5C,IAAI,CAACD,IAAI,EAAE;IACT,MAAM,IAAIE,KAAK,iCAA+BD,eAAiB,CAAC;EAClE;AACF;AAEA,OAAO,IAAME,OAAO,GAAG,SAAS;AAChC,OAAO,IAAMC,MAAM,GAAG,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}