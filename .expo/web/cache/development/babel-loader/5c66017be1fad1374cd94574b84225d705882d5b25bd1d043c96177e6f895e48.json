{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ScreenContainer } from 'react-native-screens';\nimport createTabNavigator from \"../utils/createTabNavigator\";\nimport BottomTabBar from \"../views/BottomTabBar\";\nimport ResourceSavingScene from \"../views/ResourceSavingScene\";\nvar TabNavigationView = function (_React$PureComponent) {\n  _inherits(TabNavigationView, _React$PureComponent);\n  var _super = _createSuper(TabNavigationView);\n  function TabNavigationView() {\n    var _this;\n    _classCallCheck(this, TabNavigationView);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loaded: [_this.props.navigation.state.index]\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_getButtonComponent\", function (_ref) {\n      var route = _ref.route;\n      var descriptors = _this.props.descriptors;\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      if (options.tabBarButtonComponent) {\n        return options.tabBarButtonComponent;\n      }\n      return undefined;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_renderTabBar\", function () {\n      var _this$props = _this.props,\n        _this$props$tabBarCom = _this$props.tabBarComponent,\n        TabBarComponent = _this$props$tabBarCom === void 0 ? BottomTabBar : _this$props$tabBarCom,\n        tabBarOptions = _this$props.tabBarOptions,\n        navigation = _this$props.navigation,\n        screenProps = _this$props.screenProps,\n        getLabelText = _this$props.getLabelText,\n        getAccessibilityLabel = _this$props.getAccessibilityLabel,\n        getAccessibilityRole = _this$props.getAccessibilityRole,\n        getAccessibilityStates = _this$props.getAccessibilityStates,\n        getTestID = _this$props.getTestID,\n        renderIcon = _this$props.renderIcon,\n        onTabPress = _this$props.onTabPress,\n        onTabLongPress = _this$props.onTabLongPress;\n      var descriptors = _this.props.descriptors;\n      var state = _this.props.navigation.state;\n      var route = state.routes[state.index];\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n      if (options.tabBarVisible === false) {\n        return null;\n      }\n      return React.createElement(TabBarComponent, _extends({}, tabBarOptions, {\n        jumpTo: _this._jumpTo,\n        navigation: navigation,\n        screenProps: screenProps,\n        onTabPress: onTabPress,\n        onTabLongPress: onTabLongPress,\n        getLabelText: getLabelText,\n        getButtonComponent: _this._getButtonComponent,\n        getAccessibilityLabel: getAccessibilityLabel,\n        getAccessibilityRole: getAccessibilityRole,\n        getAccessibilityStates: getAccessibilityStates,\n        getTestID: getTestID,\n        renderIcon: renderIcon\n      }));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_jumpTo\", function (key) {\n      var _this$props2 = _this.props,\n        navigation = _this$props2.navigation,\n        onIndexChange = _this$props2.onIndexChange;\n      var index = navigation.state.routes.findIndex(function (route) {\n        return route.key === key;\n      });\n      onIndexChange(index);\n    });\n    return _this;\n  }\n  _createClass(TabNavigationView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        navigation = _this$props3.navigation,\n        renderScene = _this$props3.renderScene,\n        lazy = _this$props3.lazy,\n        _this$props3$detachIn = _this$props3.detachInactiveScreens,\n        detachInactiveScreens = _this$props3$detachIn === void 0 ? true : _this$props3$detachIn;\n      var routes = navigation.state.routes;\n      var loaded = this.state.loaded;\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(ScreenContainer, {\n        enabled: detachInactiveScreens,\n        style: styles.pages\n      }, routes.map(function (route, index) {\n        if (lazy && !loaded.includes(index)) {\n          return null;\n        }\n        var isFocused = navigation.state.index === index;\n        return React.createElement(ResourceSavingScene, {\n          key: route.key,\n          style: StyleSheet.absoluteFill,\n          isVisible: isFocused,\n          enabled: detachInactiveScreens\n        }, renderScene({\n          route: route\n        }));\n      })), this._renderTabBar());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var index = nextProps.navigation.state.index;\n      return {\n        loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat(_toConsumableArray(prevState.loaded), [index])\n      };\n    }\n  }]);\n  return TabNavigationView;\n}(React.PureComponent);\n_defineProperty(TabNavigationView, \"defaultProps\", {\n  lazy: true,\n  getAccessibilityRole: function getAccessibilityRole() {\n    return 'button';\n  },\n  getAccessibilityStates: function getAccessibilityStates(_ref2) {\n    var focused = _ref2.focused;\n    return focused ? ['selected'] : [];\n  }\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  pages: {\n    flex: 1\n  }\n});\nexport default createTabNavigator(TabNavigationView);","map":{"version":3,"names":["React","View","StyleSheet","ScreenContainer","createTabNavigator","BottomTabBar","ResourceSavingScene","TabNavigationView","_React$PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","loaded","props","navigation","state","index","_ref","route","descriptors","descriptor","key","options","tabBarButtonComponent","undefined","_this$props","_this$props$tabBarCom","tabBarComponent","TabBarComponent","tabBarOptions","screenProps","getLabelText","getAccessibilityLabel","getAccessibilityRole","getAccessibilityStates","getTestID","renderIcon","onTabPress","onTabLongPress","routes","tabBarVisible","createElement","_extends","jumpTo","_jumpTo","getButtonComponent","_getButtonComponent","_this$props2","onIndexChange","findIndex","_createClass","value","render","_this$props3","renderScene","lazy","_this$props3$detachIn","detachInactiveScreens","style","styles","container","enabled","pages","map","includes","isFocused","absoluteFill","isVisible","_renderTabBar","getDerivedStateFromProps","nextProps","prevState","_toConsumableArray","PureComponent","_ref2","focused","create","flex","overflow"],"sources":["C:\\Users\\adamk\\Downloads\\kasino9\\node_modules\\react-navigation-tabs\\lib\\module\\navigators\\createBottomTabNavigator.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, AccessibilityRole } from 'react-native';\nimport { NavigationRoute } from 'react-navigation';\n\nimport { ScreenContainer } from 'react-native-screens';\n\nimport createTabNavigator, {\n  NavigationViewProps,\n} from '../utils/createTabNavigator';\nimport BottomTabBar from '../views/BottomTabBar';\nimport ResourceSavingScene from '../views/ResourceSavingScene';\nimport {\n  NavigationTabProp,\n  NavigationBottomTabOptions,\n  BottomTabBarOptions,\n  SceneDescriptorMap,\n} from '../types';\n\ntype Config = {\n  lazy?: boolean;\n  tabBarComponent?: React.ComponentType<any>;\n  tabBarOptions?: BottomTabBarOptions;\n  detachInactiveScreens?: boolean;\n};\n\ntype Props = NavigationViewProps &\n  Config & {\n    getAccessibilityRole: (props: {\n      route: NavigationRoute;\n    }) => AccessibilityRole | undefined;\n    getAccessibilityStates: (props: {\n      route: NavigationRoute;\n      focused: boolean;\n    }) => string[];\n    navigation: NavigationTabProp;\n    descriptors: SceneDescriptorMap;\n    screenProps?: unknown;\n  };\n\ntype State = {\n  loaded: number[];\n};\n\nclass TabNavigationView extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    lazy: true,\n    getAccessibilityRole: (): AccessibilityRole => 'button',\n    getAccessibilityStates: ({ focused }: { focused: boolean }) =>\n      focused ? ['selected'] : [],\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const { index } = nextProps.navigation.state;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(index)\n        ? prevState.loaded\n        : [...prevState.loaded, index],\n    };\n  }\n\n  state = {\n    loaded: [this.props.navigation.state.index],\n  };\n\n  _getButtonComponent = ({ route }: { route: NavigationRoute }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarButtonComponent) {\n      return options.tabBarButtonComponent;\n    }\n\n    return undefined;\n  };\n\n  _renderTabBar = () => {\n    const {\n      tabBarComponent: TabBarComponent = BottomTabBar,\n      tabBarOptions,\n      navigation,\n      screenProps,\n      getLabelText,\n      getAccessibilityLabel,\n      getAccessibilityRole,\n      getAccessibilityStates,\n      getTestID,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n    } = this.props;\n\n    const { descriptors } = this.props;\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarVisible === false) {\n      return null;\n    }\n\n    return (\n      <TabBarComponent\n        {...tabBarOptions}\n        jumpTo={this._jumpTo}\n        navigation={navigation}\n        screenProps={screenProps}\n        onTabPress={onTabPress}\n        onTabLongPress={onTabLongPress}\n        getLabelText={getLabelText}\n        getButtonComponent={this._getButtonComponent}\n        getAccessibilityLabel={getAccessibilityLabel}\n        getAccessibilityRole={getAccessibilityRole}\n        getAccessibilityStates={getAccessibilityStates}\n        getTestID={getTestID}\n        renderIcon={renderIcon}\n      />\n    );\n  };\n\n  _jumpTo = (key: string) => {\n    const { navigation, onIndexChange } = this.props;\n\n    const index = navigation.state.routes.findIndex(\n      (route) => route.key === key\n    );\n\n    onIndexChange(index);\n  };\n\n  render() {\n    const {\n      navigation,\n      renderScene,\n      lazy,\n      detachInactiveScreens = true,\n    } = this.props;\n    const { routes } = navigation.state;\n    const { loaded } = this.state;\n\n    return (\n      <View style={styles.container}>\n        {/* @ts-ignore */}\n        <ScreenContainer enabled={detachInactiveScreens} style={styles.pages}>\n          {routes.map((route, index) => {\n            if (lazy && !loaded.includes(index)) {\n              // Don't render a screen if we've never navigated to it\n              return null;\n            }\n\n            const isFocused = navigation.state.index === index;\n\n            return (\n              <ResourceSavingScene\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                isVisible={isFocused}\n                enabled={detachInactiveScreens}\n              >\n                {renderScene({ route })}\n              </ResourceSavingScene>\n            );\n          })}\n        </ScreenContainer>\n        {this._renderTabBar()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  pages: {\n    flex: 1,\n  },\n});\n\nexport default createTabNavigator<Config, NavigationBottomTabOptions, Props>(\n  TabNavigationView\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}