{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _lodash = require('lodash');\nvar _lodash2 = _interopRequireDefault(_lodash);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nmodule.exports = function (style) {\n  if (_lodash2.default.isArray(style)) {\n    return _lodash2.default.reduce(style, function (merged, nextStyle) {\n      return _extends({}, merged, nextStyle);\n    }, {});\n  }\n  return style;\n};","map":{"version":3,"names":["_lodash","require","module","exports","style","_lodash2","default","isArray","reduce","merged","nextStyle","_extends"],"sources":["C:\\Users\\adamk\\Downloads\\kasino9\\node_modules\\native-base\\src\\utils\\getStyle.js"],"sourcesContent":["import _ from 'lodash';\n\nmodule.exports = function(style) {\n  // style: PropTypes.object | PropTypes.array | PropTypes.number\n\n  // If style is an array, merge the objects in the array\n  // to get the final style\n  if (_.isArray(style)) {\n    return _.reduce(\n      style,\n      (merged, nextStyle) => ({ ...merged, ...nextStyle }),\n      {}\n    );\n  }\n\n  return style;\n};\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;;;;;;;AAEAC,MAAA,CAAOC,OAAP,GAAiB,UAASC,KAAT,EAAgB;EAK/B,IAAIC,QAAA,CAAAC,OAAA,CAAEC,OAAF,CAAUH,KAAV,CAAJ,EAAsB;IACpB,OAAOC,QAAA,CAAAC,OAAA,CAAEE,MAAF,CACLJ,KADK,EAEL,UAACK,MAAD,EAASC,SAAT;MAAA,OAAAC,QAAA,KAA6BF,MAA7B,EAAwCC,SAAxC;IAAA,CAFK,EAGL,EAHK,CAAP;EAKD;EAED,OAAON,KAAP;AACD,CAdD"},"metadata":{},"sourceType":"script","externalDependencies":[]}