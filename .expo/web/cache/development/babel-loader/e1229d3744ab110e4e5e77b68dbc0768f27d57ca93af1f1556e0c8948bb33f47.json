{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationActions } from 'react-navigation';\nvar DrawerSidebar = function (_React$PureComponent) {\n  _inherits(DrawerSidebar, _React$PureComponent);\n  var _super = _createSuper(DrawerSidebar);\n  function DrawerSidebar() {\n    var _this;\n    _classCallCheck(this, DrawerSidebar);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"getScreenOptions\", function (routeKey) {\n      var descriptor = _this.props.descriptors[routeKey];\n      if (!descriptor.options) {\n        throw new Error('Cannot access screen descriptor options from drawer sidebar');\n      }\n      return descriptor.options;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getLabel\", function (_ref) {\n      var focused = _ref.focused,\n        tintColor = _ref.tintColor,\n        route = _ref.route;\n      var _this$getScreenOption = _this.getScreenOptions(route.key),\n        drawerLabel = _this$getScreenOption.drawerLabel,\n        title = _this$getScreenOption.title;\n      if (drawerLabel) {\n        return typeof drawerLabel === 'function' ? drawerLabel({\n          tintColor: tintColor,\n          focused: focused\n        }) : drawerLabel;\n      }\n      if (typeof title === 'string') {\n        return title;\n      }\n      return route.routeName;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"renderIcon\", function (_ref2) {\n      var focused = _ref2.focused,\n        tintColor = _ref2.tintColor,\n        route = _ref2.route;\n      var _this$getScreenOption2 = _this.getScreenOptions(route.key),\n        drawerIcon = _this$getScreenOption2.drawerIcon;\n      if (drawerIcon) {\n        return typeof drawerIcon === 'function' ? drawerIcon({\n          tintColor: tintColor,\n          focused: focused\n        }) : drawerIcon;\n      }\n      return null;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleItemPress\", function (_ref3) {\n      var route = _ref3.route,\n        focused = _ref3.focused;\n      if (focused) {\n        _this.props.navigation.closeDrawer();\n      } else {\n        _this.props.navigation.dispatch(NavigationActions.navigate({\n          routeName: route.routeName\n        }));\n      }\n    });\n    return _this;\n  }\n  _createClass(DrawerSidebar, [{\n    key: \"render\",\n    value: function render() {\n      var ContentComponent = this.props.contentComponent;\n      if (!ContentComponent) {\n        return null;\n      }\n      var state = this.props.navigation.state;\n      if (typeof state.index !== 'number') {\n        throw new Error('The index of the route should be state in the navigation state');\n      }\n      return React.createElement(View, {\n        style: [styles.container, this.props.style]\n      }, React.createElement(ContentComponent, _extends({}, this.props.contentOptions, {\n        navigation: this.props.navigation,\n        descriptors: this.props.descriptors,\n        drawerOpenProgress: this.props.drawerOpenProgress,\n        items: state.routes,\n        activeItemKey: state.routes[state.index] ? state.routes[state.index].key : null,\n        screenProps: this.props.screenProps,\n        getLabel: this.getLabel,\n        renderIcon: this.renderIcon,\n        onItemPress: this.handleItemPress,\n        drawerPosition: this.props.drawerPosition\n      })));\n    }\n  }]);\n  return DrawerSidebar;\n}(React.PureComponent);\nexport default DrawerSidebar;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","NavigationActions","DrawerSidebar","_React$PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","routeKey","descriptor","props","descriptors","options","Error","_ref","focused","tintColor","route","_this$getScreenOption","getScreenOptions","key","drawerLabel","title","routeName","_ref2","_this$getScreenOption2","drawerIcon","_ref3","navigation","closeDrawer","dispatch","navigate","_createClass","value","render","ContentComponent","contentComponent","state","index","createElement","style","styles","container","_extends","contentOptions","drawerOpenProgress","items","routes","activeItemKey","screenProps","getLabel","renderIcon","onItemPress","handleItemPress","drawerPosition","PureComponent","create","flex"],"sources":["C:\\Users\\adamk\\Downloads\\kasino9\\node_modules\\react-navigation-drawer\\lib\\module\\views\\DrawerSidebar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  NavigationActions,\n  NavigationRoute,\n  NavigationScreenProp,\n} from 'react-navigation';\nimport Animated from 'react-native-reanimated';\nimport {\n  Scene,\n  NavigationDrawerState,\n  DrawerContentComponentProps,\n  SceneDescriptorMap,\n} from '../types';\n\ntype Props = {\n  contentComponent?: React.ComponentType<DrawerContentComponentProps>;\n  contentOptions?: object;\n  screenProps?: unknown;\n  navigation: NavigationScreenProp<NavigationDrawerState>;\n  descriptors: SceneDescriptorMap;\n  drawerOpenProgress: Animated.Node<number>;\n  drawerPosition: 'left' | 'right';\n  style?: ViewStyle;\n};\n\n/**\n * Component that renders the sidebar screen of the drawer.\n */\nclass DrawerSidebar extends React.PureComponent<Props> {\n  private getScreenOptions = (routeKey: string) => {\n    const descriptor = this.props.descriptors[routeKey];\n\n    if (!descriptor.options) {\n      throw new Error(\n        'Cannot access screen descriptor options from drawer sidebar'\n      );\n    }\n\n    return descriptor.options;\n  };\n\n  private getLabel = ({ focused, tintColor, route }: Scene) => {\n    const { drawerLabel, title } = this.getScreenOptions(route.key);\n    if (drawerLabel) {\n      return typeof drawerLabel === 'function'\n        ? drawerLabel({ tintColor, focused })\n        : drawerLabel;\n    }\n\n    if (typeof title === 'string') {\n      return title;\n    }\n\n    return route.routeName;\n  };\n\n  private renderIcon = ({ focused, tintColor, route }: Scene) => {\n    const { drawerIcon } = this.getScreenOptions(route.key);\n    if (drawerIcon) {\n      return typeof drawerIcon === 'function'\n        ? drawerIcon({ tintColor, focused })\n        : drawerIcon;\n    }\n    return null;\n  };\n\n  private handleItemPress = ({\n    route,\n    focused,\n  }: {\n    route: NavigationRoute;\n    focused: boolean;\n  }) => {\n    if (focused) {\n      // @ts-ignore\n      this.props.navigation.closeDrawer();\n    } else {\n      this.props.navigation.dispatch(\n        NavigationActions.navigate({ routeName: route.routeName })\n      );\n    }\n  };\n\n  render() {\n    const ContentComponent = this.props.contentComponent;\n\n    if (!ContentComponent) {\n      return null;\n    }\n\n    const { state } = this.props.navigation;\n\n    if (typeof state.index !== 'number') {\n      throw new Error(\n        'The index of the route should be state in the navigation state'\n      );\n    }\n\n    return (\n      <View style={[styles.container, this.props.style]}>\n        <ContentComponent\n          {...this.props.contentOptions}\n          navigation={this.props.navigation}\n          descriptors={this.props.descriptors}\n          drawerOpenProgress={this.props.drawerOpenProgress}\n          items={state.routes}\n          activeItemKey={\n            state.routes[state.index] ? state.routes[state.index].key : null\n          }\n          screenProps={this.props.screenProps}\n          getLabel={this.getLabel}\n          renderIcon={this.renderIcon}\n          onItemPress={this.handleItemPress}\n          drawerPosition={this.props.drawerPosition}\n        />\n      </View>\n    );\n  }\n}\n\nexport default DrawerSidebar;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}