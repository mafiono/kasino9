{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as _ from 'lodash';\nexport var INCLUDE = '@@shoutem.theme/include';\nfunction includeSymbolMergeHandler(objVal, srcVal) {\n  var newObjVal = objVal;\n  var include;\n  if (srcVal && srcVal[INCLUDE]) {\n    include = newObjVal && newObjVal[INCLUDE] ? [].concat(_toConsumableArray(newObjVal[INCLUDE]), _toConsumableArray(srcVal[INCLUDE])) : srcVal[INCLUDE];\n  }\n  if (_.isUndefined(newObjVal) && _.isPlainObject(srcVal)) {\n    var newObj = _.mergeWith({}, srcVal, function (o, s) {\n      return s;\n    });\n    if (include) {\n      newObj[INCLUDE] = include;\n    }\n    return newObj;\n  }\n  if (_.isPlainObject(newObjVal) && include) {\n    newObjVal[INCLUDE] = include;\n  }\n}\nexport default function resolveIncludes(target) {\n  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  function getStyle(styleName) {\n    var defaultStyle = {};\n    var style = defaultStyle;\n    var baseStyle = base[styleName];\n    if (baseStyle) {\n      if (baseStyle[INCLUDE]) {\n        throw Error(\"Base style cannot have includes, unexpected include in \" + styleName + \".\");\n      }\n      style = _objectSpread({}, baseStyle);\n    }\n    var targetStyle = target[styleName];\n    if (targetStyle) {\n      style = _objectSpread(_objectSpread({}, style), targetStyle);\n    }\n    if (style === defaultStyle) {\n      console.warn(\"Including unexisting style: \" + styleName);\n    }\n    return style;\n  }\n  function includeNodeStyles(styleNode, processingStyleNames) {\n    if (!_.isPlainObject(styleNode)) {\n      return styleNode;\n    }\n    var styleNamesToInclude = styleNode[INCLUDE];\n    var stylesToInclude = {};\n    if (styleNamesToInclude) {\n      if (!_.isArray(styleNamesToInclude)) {\n        throw Error('Include should be array');\n      }\n      for (var _iterator = _createForOfIteratorHelperLoose(styleNamesToInclude), _step; !(_step = _iterator()).done;) {\n        var styleName = _step.value;\n        if (processingStyleNames.has(styleName)) {\n          throw Error(\"Circular style include, including \" + styleName);\n        }\n        processingStyleNames.add(styleName);\n        stylesToInclude = _.mergeWith({}, stylesToInclude, includeNodeStyles(getStyle(styleName), processingStyleNames), includeSymbolMergeHandler);\n        processingStyleNames.delete(styleName);\n      }\n    }\n    var resultingStyle = _.mergeWith({}, stylesToInclude, styleNode, includeSymbolMergeHandler);\n    delete resultingStyle[INCLUDE];\n    for (var _iterator2 = _createForOfIteratorHelperLoose(_.keys(resultingStyle)), _step2; !(_step2 = _iterator2()).done;) {\n      var _styleName = _step2.value;\n      resultingStyle[_styleName] = includeNodeStyles(resultingStyle[_styleName], processingStyleNames);\n    }\n    return resultingStyle;\n  }\n  var processingStyleNames = new Set();\n  return includeNodeStyles(target, processingStyleNames);\n}","map":{"version":3,"names":["_","INCLUDE","includeSymbolMergeHandler","objVal","srcVal","newObjVal","include","concat","_toConsumableArray","isUndefined","isPlainObject","newObj","mergeWith","o","s","resolveIncludes","target","base","arguments","length","undefined","getStyle","styleName","defaultStyle","style","baseStyle","Error","_objectSpread","targetStyle","console","warn","includeNodeStyles","styleNode","processingStyleNames","styleNamesToInclude","stylesToInclude","isArray","_iterator","_createForOfIteratorHelperLoose","_step","done","value","has","add","delete","resultingStyle","_iterator2","keys","_step2","Set"],"sources":["C:/Users/adamk/Downloads/kasino9/node_modules/native-base-shoutem-theme/src/resolveIncludes.js"],"sourcesContent":["import * as _ from 'lodash';\nexport const INCLUDE = '@@shoutem.theme/include';\n\n/**\n * Customizer function for lodash mergeWith which handle INCLUDE symbol.\n * Lodash merge/mergeWith functions doesn't merge symbols\n * and we use INCLUDE symbol to define which style we want to include.\n */\n// eslint-disable-next-line consistent-return\nfunction includeSymbolMergeHandler(objVal, srcVal) {\n  const newObjVal = objVal;\n  let include;\n\n  if (srcVal && srcVal[INCLUDE]) {\n    include = newObjVal && newObjVal[INCLUDE] ?\n      [...newObjVal[INCLUDE], ...srcVal[INCLUDE]] : srcVal[INCLUDE];\n  }\n\n  // if objVal doesn't exists create new from source\n  if (_.isUndefined(newObjVal) && _.isPlainObject(srcVal)) {\n    // Copy symbol fix.\n    // { ...srcVal } copies symbol wrong, it adds symbol value to the property defined just after it\n    // Problem example: { SYMBOL: ['Test'], someProp: 10 } => { someProp: ['Test'] }\n    // mergeWith prevents wrong copy because it doesn't iterate trough Symbols so it skips INCLUDE\n    // We do not INCLUDE symbol to be copied actually in this function\n    // because it is copied manually. This whole function is fixing Symbol problems.\n    const newObj = _.mergeWith({}, srcVal, (o, s) => s);\n    // Assigning INCLUDE after object definition to avoid Object.assign when code transpiled.\n    // Object.assign in RN uses polyfill which doesn't copy Symbols that's why INCLUDE symbol\n    // must be set manually after spread.\n    // TODO(Braco) - once Object.assign polyfill is no longer used use commented code bellow\n    // Check if `customizer` is needed still at all after polyfill is removed!\n    // return { ...srcVal, [INCLUDE]: include }; // add new lines for each property\n    if (include) {\n      newObj[INCLUDE] = include;\n    }\n    return newObj;\n  }\n\n  // otherwise let lodash default merge (return undefined)\n  // and add INCLUDE to objVal if any in srcVal\n  if (_.isPlainObject(newObjVal) && include) {\n    newObjVal[INCLUDE] = include;\n  }\n}\n\n/**\n * Recursively include required target styles from target and base root.\n *\n * @param target - styles object containing\n * @param base - additional style object from which target may include style\n */\nexport default function resolveIncludes(target, base = {}) {\n  /**\n   * Include process steps:\n   * 1. Iterate through target object, check if property is object and if it has [INCLUDE]\n   * 2.a. If property is object, repeat process for that object\n   * 2.b. If property is not object leave value as is\n   * 3. Include any [INCLUDE] (required style)\n   *  1. Repeat process for required style (check if it has any [INCLUDE])\n   */\n\n  /**\n   * Merges style from target and base.\n   * Target style overrides base.\n   * @param styleName - style name to include\n   */\n  function getStyle(styleName) {\n    const defaultStyle = {};\n    let style = defaultStyle;\n\n    const baseStyle = base[styleName];\n    if (baseStyle) {\n      if (baseStyle[INCLUDE]) {\n        throw Error(`Base style cannot have includes, unexpected include in ${styleName}.`);\n      }\n      style = { ...baseStyle };\n    }\n\n    const targetStyle = target[styleName];\n    if (targetStyle) {\n      style = {\n        ...style,\n        ...targetStyle,\n      };\n    }\n\n    if (style === defaultStyle) {\n      console.warn(`Including unexisting style: ${styleName}`);\n    }\n\n    return style;\n  }\n\n  // Includes all styles required by using the INCLUDE symbol\n  // on the styleNode object level, and recursively calls itself\n  // for all nested style objects. After calling this function, the\n  // styleNode object will be fully processed, i.e., all styles\n  // required by this object, and any of its children will be resolved.\n  function includeNodeStyles(styleNode, processingStyleNames) {\n    if (!_.isPlainObject(styleNode)) {\n      return styleNode;\n    }\n\n    // Style names which current style node want to include\n    const styleNamesToInclude = styleNode[INCLUDE];\n\n    let stylesToInclude = {};\n    if (styleNamesToInclude) {\n      if (!_.isArray(styleNamesToInclude)) {\n        throw Error('Include should be array');\n      }\n\n      for (const styleName of styleNamesToInclude) {\n        if (processingStyleNames.has(styleName)) {\n          throw Error(`Circular style include, including ${styleName}`);\n        }\n        processingStyleNames.add(styleName);\n        stylesToInclude = _.mergeWith(\n          {},\n          stylesToInclude,\n          includeNodeStyles(getStyle(styleName), processingStyleNames),\n          includeSymbolMergeHandler\n        );\n        processingStyleNames.delete(styleName);\n      }\n    }\n\n    const resultingStyle = _.mergeWith({}, stylesToInclude, styleNode, includeSymbolMergeHandler);\n    delete resultingStyle[INCLUDE];\n\n    for (const styleName of _.keys(resultingStyle)) {\n      resultingStyle[styleName] =\n        includeNodeStyles(resultingStyle[styleName], processingStyleNames);\n    }\n    return resultingStyle;\n  }\n\n  // A that holds all style names that are currently\n  // being processed. This is used to detect include\n  // cycles.\n  const processingStyleNames = new Set();\n  return includeNodeStyles(target, processingStyleNames);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}