{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nexport function getActiveStateExceptDrawer(param) {\n  var state = param;\n  if (!state.routes) {\n    return state;\n  }\n  if (state.routes[state.index].routeName === 'DrawerOpen') {\n    return getActiveState(state.routes[0]);\n  }\n  return getActiveState(state.routes[state.index]);\n}\nexport function isActiveRoute(state, routeName) {\n  if (state.routeName === routeName) {\n    return true;\n  }\n  if (!state.routes) {\n    return state.routeName === routeName;\n  }\n  if (state.routes[state.index].routeName === 'DrawerOpen') {\n    return isActiveRoute(state.routes[0], routeName);\n  }\n  return isActiveRoute(state.routes[state.index], routeName);\n}\nexport function getRouteNameByKey(state, key) {\n  if (state.key === key) {\n    return state.routeName;\n  }\n  if (!state.routes) {\n    return state.routeName;\n  }\n  if (state.routes[state.index].key === key) {\n    return state.routes[state.index].routeName;\n  }\n  return getRouteNameByKey(state.routes[state.index], key);\n}\nexport function getActiveState(param, parent) {\n  var state = param;\n  if (!state.routes) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      parent: parent\n    });\n  }\n  return getActiveState(state.routes[state.index], _objectSpread(_objectSpread({}, state), {}, {\n    parent: parent\n  }));\n}\nexport function getParent(state, routeName, parent) {\n  if (state.routeName === routeName) {\n    return parent;\n  }\n  if (!state.routes) {\n    return null;\n  }\n  for (var i = 0; i < state.routes.length; i += 1) {\n    var res = getParent(state.routes[i], routeName, state);\n    if (res) {\n      return res;\n    }\n  }\n  return null;\n}\nexport function inject(state, key, index, routes) {\n  if (!state.routes) {\n    return state;\n  }\n  if (state.key === key) {\n    if (routes) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        routes: routes,\n        index: index\n      });\n    }\n    return _objectSpread(_objectSpread({}, state), {}, {\n      index: index\n    });\n  }\n  return _objectSpread(_objectSpread({}, state), {}, {\n    routes: state.routes.map(function (x) {\n      return inject(x, key, index, routes);\n    })\n  });\n}\nexport function popPrevious(state, routeName) {\n  var parent = getParent(state, routeName);\n  var key = parent.key,\n    index = parent.index;\n  if (index) {\n    var routes = [].concat(_toConsumableArray(parent.routes.slice(0, index - 1)), _toConsumableArray(parent.routes.slice(index)));\n    var newState = inject(state, key, index - 1, routes);\n    return newState;\n  }\n  return state;\n}","map":{"version":3,"names":["getActiveStateExceptDrawer","param","state","routes","index","routeName","getActiveState","isActiveRoute","getRouteNameByKey","key","parent","_objectSpread","getParent","i","length","res","inject","map","x","popPrevious","concat","_toConsumableArray","slice","newState"],"sources":["C:/Users/adamk/Downloads/kasino9/node_modules/react-native-router-flux/src/State.js"],"sourcesContent":["export function getActiveStateExceptDrawer(param) {\n  const state = param;\n  if (!state.routes) {\n    return state;\n  }\n  if (state.routes[state.index].routeName === 'DrawerOpen') {\n    return getActiveState(state.routes[0]);\n  }\n  return getActiveState(state.routes[state.index]);\n}\n\nexport function isActiveRoute(state, routeName) {\n  if (state.routeName === routeName) {\n    return true;\n  }\n  if (!state.routes) {\n    return state.routeName === routeName;\n  }\n  if (state.routes[state.index].routeName === 'DrawerOpen') {\n    return isActiveRoute(state.routes[0], routeName);\n  }\n  return isActiveRoute(state.routes[state.index], routeName);\n}\n\nexport function getRouteNameByKey(state, key) {\n  if (state.key === key) {\n    return state.routeName;\n  }\n  if (!state.routes) {\n    return state.routeName;\n  }\n  if (state.routes[state.index].key === key) {\n    return state.routes[state.index].routeName;\n  }\n  return getRouteNameByKey(state.routes[state.index], key);\n}\n\nexport function getActiveState(param, parent) {\n  const state = param;\n  if (!state.routes) {\n    return { ...state, parent };\n  }\n  return getActiveState(state.routes[state.index], { ...state, parent });\n}\n\nexport function getParent(state, routeName, parent) {\n  if (state.routeName === routeName) {\n    return parent;\n  }\n  if (!state.routes) {\n    return null;\n  }\n  for (let i = 0; i < state.routes.length; i += 1) {\n    const res = getParent(state.routes[i], routeName, state);\n    if (res) {\n      return res;\n    }\n  }\n  return null;\n}\n\nexport function inject(state, key, index, routes) {\n  if (!state.routes) {\n    return state;\n  }\n  if (state.key === key) {\n    if (routes) {\n      return { ...state, routes, index };\n    }\n    return { ...state, index };\n  }\n  return { ...state, routes: state.routes.map(x => inject(x, key, index, routes)) };\n}\n\nexport function popPrevious(state, routeName) {\n  const parent = getParent(state, routeName);\n  // console.log('FOUND PARENT:', JSON.stringify(parent));\n  const { key, index } = parent;\n  if (index) {\n    const routes = [...parent.routes.slice(0, index - 1), ...parent.routes.slice(index)];\n    const newState = inject(state, key, index - 1, routes);\n    return newState;\n  }\n  return state;\n}\n"],"mappings":";;;;AAAA,OAAO,SAASA,0BAA0BA,CAACC,KAAK,EAAE;EAChD,IAAMC,KAAK,GAAGD,KAAK;EACnB,IAAI,CAACC,KAAK,CAACC,MAAM,EAAE;IACjB,OAAOD,KAAK;EACd;EACA,IAAIA,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,CAACC,SAAS,KAAK,YAAY,EAAE;IACxD,OAAOC,cAAc,CAACJ,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EACxC;EACA,OAAOG,cAAc,CAACJ,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,CAAC;AAClD;AAEA,OAAO,SAASG,aAAaA,CAACL,KAAK,EAAEG,SAAS,EAAE;EAC9C,IAAIH,KAAK,CAACG,SAAS,KAAKA,SAAS,EAAE;IACjC,OAAO,IAAI;EACb;EACA,IAAI,CAACH,KAAK,CAACC,MAAM,EAAE;IACjB,OAAOD,KAAK,CAACG,SAAS,KAAKA,SAAS;EACtC;EACA,IAAIH,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,CAACC,SAAS,KAAK,YAAY,EAAE;IACxD,OAAOE,aAAa,CAACL,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEE,SAAS,CAAC;EAClD;EACA,OAAOE,aAAa,CAACL,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,EAAEC,SAAS,CAAC;AAC5D;AAEA,OAAO,SAASG,iBAAiBA,CAACN,KAAK,EAAEO,GAAG,EAAE;EAC5C,IAAIP,KAAK,CAACO,GAAG,KAAKA,GAAG,EAAE;IACrB,OAAOP,KAAK,CAACG,SAAS;EACxB;EACA,IAAI,CAACH,KAAK,CAACC,MAAM,EAAE;IACjB,OAAOD,KAAK,CAACG,SAAS;EACxB;EACA,IAAIH,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,CAACK,GAAG,KAAKA,GAAG,EAAE;IACzC,OAAOP,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,CAACC,SAAS;EAC5C;EACA,OAAOG,iBAAiB,CAACN,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,EAAEK,GAAG,CAAC;AAC1D;AAEA,OAAO,SAASH,cAAcA,CAACL,KAAK,EAAES,MAAM,EAAE;EAC5C,IAAMR,KAAK,GAAGD,KAAK;EACnB,IAAI,CAACC,KAAK,CAACC,MAAM,EAAE;IACjB,OAAAQ,aAAA,CAAAA,aAAA,KAAYT,KAAK;MAAEQ,MAAM,EAANA;IAAM;EAC3B;EACA,OAAOJ,cAAc,CAACJ,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,EAAAO,aAAA,CAAAA,aAAA,KAAOT,KAAK;IAAEQ,MAAM,EAANA;EAAM,EAAE,CAAC;AACxE;AAEA,OAAO,SAASE,SAASA,CAACV,KAAK,EAAEG,SAAS,EAAEK,MAAM,EAAE;EAClD,IAAIR,KAAK,CAACG,SAAS,KAAKA,SAAS,EAAE;IACjC,OAAOK,MAAM;EACf;EACA,IAAI,CAACR,KAAK,CAACC,MAAM,EAAE;IACjB,OAAO,IAAI;EACb;EACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,KAAK,CAACC,MAAM,CAACW,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC/C,IAAME,GAAG,GAAGH,SAAS,CAACV,KAAK,CAACC,MAAM,CAACU,CAAC,CAAC,EAAER,SAAS,EAAEH,KAAK,CAAC;IACxD,IAAIa,GAAG,EAAE;MACP,OAAOA,GAAG;IACZ;EACF;EACA,OAAO,IAAI;AACb;AAEA,OAAO,SAASC,MAAMA,CAACd,KAAK,EAAEO,GAAG,EAAEL,KAAK,EAAED,MAAM,EAAE;EAChD,IAAI,CAACD,KAAK,CAACC,MAAM,EAAE;IACjB,OAAOD,KAAK;EACd;EACA,IAAIA,KAAK,CAACO,GAAG,KAAKA,GAAG,EAAE;IACrB,IAAIN,MAAM,EAAE;MACV,OAAAQ,aAAA,CAAAA,aAAA,KAAYT,KAAK;QAAEC,MAAM,EAANA,MAAM;QAAEC,KAAK,EAALA;MAAK;IAClC;IACA,OAAAO,aAAA,CAAAA,aAAA,KAAYT,KAAK;MAAEE,KAAK,EAALA;IAAK;EAC1B;EACA,OAAAO,aAAA,CAAAA,aAAA,KAAYT,KAAK;IAAEC,MAAM,EAAED,KAAK,CAACC,MAAM,CAACc,GAAG,CAAC,UAAAC,CAAC;MAAA,OAAIF,MAAM,CAACE,CAAC,EAAET,GAAG,EAAEL,KAAK,EAAED,MAAM,CAAC;IAAA;EAAC;AACjF;AAEA,OAAO,SAASgB,WAAWA,CAACjB,KAAK,EAAEG,SAAS,EAAE;EAC5C,IAAMK,MAAM,GAAGE,SAAS,CAACV,KAAK,EAAEG,SAAS,CAAC;EAAC,IAEnCI,GAAG,GAAYC,MAAM,CAArBD,GAAG;IAAEL,KAAK,GAAKM,MAAM,CAAhBN,KAAK;EAClB,IAAIA,KAAK,EAAE;IACT,IAAMD,MAAM,MAAAiB,MAAA,CAAAC,kBAAA,CAAOX,MAAM,CAACP,MAAM,CAACmB,KAAK,CAAC,CAAC,EAAElB,KAAK,GAAG,CAAC,CAAC,GAAAiB,kBAAA,CAAKX,MAAM,CAACP,MAAM,CAACmB,KAAK,CAAClB,KAAK,CAAC,EAAC;IACpF,IAAMmB,QAAQ,GAAGP,MAAM,CAACd,KAAK,EAAEO,GAAG,EAAEL,KAAK,GAAG,CAAC,EAAED,MAAM,CAAC;IACtD,OAAOoB,QAAQ;EACjB;EACA,OAAOrB,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}