{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport AccessibilityUtil from \"../AccessibilityUtil\";\nimport css from \"../../exports/StyleSheet/css\";\nimport StyleSheet from \"../../exports/StyleSheet\";\nimport styleResolver from \"../../exports/StyleSheet/styleResolver\";\nimport { STYLE_GROUPS } from \"../../exports/StyleSheet/constants\";\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\nvar createDOMProps = function createDOMProps(component, props) {\n  if (!props) {\n    props = emptyObject;\n  }\n  var _props = props,\n    accessibilityLabel = _props.accessibilityLabel,\n    accessibilityLiveRegion = _props.accessibilityLiveRegion,\n    accessibilityState = _props.accessibilityState,\n    accessibilityValue = _props.accessibilityValue,\n    accessible = _props.accessible,\n    classList = _props.classList,\n    dataSet = _props.dataSet,\n    providedDisabled = _props.disabled,\n    importantForAccessibility = _props.importantForAccessibility,\n    nativeID = _props.nativeID,\n    pointerEvents = _props.pointerEvents,\n    providedStyle = _props.style,\n    testID = _props.testID,\n    accessibilityRole = _props.accessibilityRole,\n    domProps = _objectWithoutProperties(_props, [\"accessibilityLabel\", \"accessibilityLiveRegion\", \"accessibilityState\", \"accessibilityValue\", \"accessible\", \"classList\", \"dataSet\", \"disabled\", \"importantForAccessibility\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\", \"accessibilityRole\"]);\n  var disabled = accessibilityState != null && accessibilityState.disabled === true || providedDisabled;\n  var role = AccessibilityUtil.propsToAriaRole(props);\n  var isNativeInteractiveElement = role === 'link' || component === 'a' || component === 'button' || component === 'input' || component === 'select' || component === 'textarea' || domProps.contentEditable != null;\n  if (dataSet != null) {\n    for (var prop in dataSet) {\n      if (hasOwnProperty.call(dataSet, prop)) {\n        var value = dataSet[prop];\n        if (value != null) {\n          domProps[\"data-\" + prop] = value;\n        }\n      }\n    }\n  }\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n  if (role != null) {\n    domProps.role = role;\n  }\n  if (accessibilityState != null) {\n    for (var _prop in accessibilityState) {\n      var _value = accessibilityState[_prop];\n      if (_value != null) {\n        if (_prop === 'disabled' || _prop === 'hidden') {\n          if (_value === true) {\n            domProps[\"aria-\" + _prop] = _value;\n            domProps[_prop] = _value;\n          }\n        } else {\n          domProps[\"aria-\" + _prop] = _value;\n        }\n      }\n    }\n  }\n  if (accessibilityValue != null) {\n    for (var _prop2 in accessibilityValue) {\n      var _value2 = accessibilityValue[_prop2];\n      if (_value2 != null) {\n        domProps[\"aria-value\" + _prop2] = _value2;\n      }\n    }\n  }\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n    domProps.disabled = true;\n  }\n  var focusable = !disabled && importantForAccessibility !== 'no' && importantForAccessibility !== 'no-hide-descendants';\n  if (isNativeInteractiveElement) {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (role === 'button' || role === 'menuitem' || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  }\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], providedStyle);\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = component === 'a' || component === 'button' || component === 'li' || component === 'ul' || role === 'heading';\n  var finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList];\n  var _styleResolver$resolv = styleResolver.resolve(reactNativeStyle, finalClassList),\n    className = _styleResolver$resolv.className,\n    style = _styleResolver$resolv.style;\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n  if (style) {\n    domProps.style = style;\n  }\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  }\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = (domProps.rel || '') + \" noopener noreferrer\";\n  }\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n  if (domProps['data-focusable']) {\n    var onClick = domProps.onClick;\n    if (onClick != null) {\n      if (disabled) {\n        domProps.onClick = function (e) {\n          e.stopPropagation();\n        };\n      } else if (!isNativeInteractiveElement) {\n        var onKeyDown = domProps.onKeyDown;\n        domProps.onKeyDown = function (e) {\n          var key = e.key,\n            repeat = e.repeat;\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n          var isButtonRole = role === 'button' || role === 'menuitem';\n          if (onKeyDown != null) {\n            onKeyDown(e);\n          }\n          if (!repeat && key === 'Enter') {\n            onClick(e);\n          } else if (isSpacebarKey && isButtonRole) {\n            if (!repeat) {\n              onClick(e);\n            }\n            e.preventDefault();\n          }\n        };\n      }\n    }\n  }\n  return domProps;\n};\nexport default createDOMProps;","map":{"version":3,"names":["AccessibilityUtil","css","StyleSheet","styleResolver","STYLE_GROUPS","emptyObject","hasOwnProperty","Object","prototype","classes","create","reset","backgroundColor","color","font","listStyle","margin","textAlign","textDecoration","cursor","classicReset","pointerEventsStyles","auto","pointerEvents","none","createDOMProps","component","props","_props","accessibilityLabel","accessibilityLiveRegion","accessibilityState","accessibilityValue","accessible","classList","dataSet","providedDisabled","disabled","importantForAccessibility","nativeID","providedStyle","style","testID","accessibilityRole","domProps","_objectWithoutProperties","role","propsToAriaRole","isNativeInteractiveElement","contentEditable","prop","call","value","focusable","tabIndex","reactNativeStyle","compose","needsCursor","needsReset","finalClassList","_styleResolver$resolv","resolve","className","id","target","rel","onClick","e","stopPropagation","onKeyDown","key","repeat","isSpacebarKey","isButtonRole","preventDefault"],"sources":["C:/Users/adamk/Downloads/kasino9/node_modules/react-native-web/src/modules/createDOMProps/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport css from '../../exports/StyleSheet/css';\nimport StyleSheet from '../../exports/StyleSheet';\nimport styleResolver from '../../exports/StyleSheet/styleResolver';\nimport { STYLE_GROUPS } from '../../exports/StyleSheet/constants';\n\nconst emptyObject = {};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n// Reset styles for heading, link, and list DOM elements\nconst classes = css.create(\n  {\n    reset: {\n      backgroundColor: 'transparent',\n      color: 'inherit',\n      font: 'inherit',\n      listStyle: 'none',\n      margin: 0,\n      textAlign: 'inherit',\n      textDecoration: 'none'\n    },\n    cursor: {\n      cursor: 'pointer'\n    }\n  },\n  STYLE_GROUPS.classicReset\n);\n\nconst pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nconst createDOMProps = (component, props) => {\n  if (!props) {\n    props = emptyObject;\n  }\n\n  const {\n    accessibilityLabel,\n    accessibilityLiveRegion,\n    accessibilityState,\n    accessibilityValue,\n    accessible,\n    classList,\n    dataSet,\n    disabled: providedDisabled,\n    importantForAccessibility,\n    nativeID,\n    pointerEvents,\n    style: providedStyle,\n    testID,\n    /* eslint-disable */\n    accessibilityRole,\n    /* eslint-enable */\n    ...domProps\n  } = props;\n\n  const disabled =\n    (accessibilityState != null && accessibilityState.disabled === true) || providedDisabled;\n  const role = AccessibilityUtil.propsToAriaRole(props);\n  const isNativeInteractiveElement =\n    role === 'link' ||\n    component === 'a' ||\n    component === 'button' ||\n    component === 'input' ||\n    component === 'select' ||\n    component === 'textarea' ||\n    domProps.contentEditable != null;\n\n  // dataSet\n  if (dataSet != null) {\n    for (const prop in dataSet) {\n      if (hasOwnProperty.call(dataSet, prop)) {\n        const value = dataSet[prop];\n        if (value != null) {\n          domProps[`data-${prop}`] = value;\n        }\n      }\n    }\n  }\n\n  // accessibilityLabel\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  // accessibilityLiveRegion\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  // accessibilityRole\n  if (role != null) {\n    domProps.role = role;\n  }\n\n  // accessibilityState\n  if (accessibilityState != null) {\n    for (const prop in accessibilityState) {\n      const value = accessibilityState[prop];\n      if (value != null) {\n        if (prop === 'disabled' || prop === 'hidden') {\n          if (value === true) {\n            domProps[`aria-${prop}`] = value;\n            // also set prop directly to pick up host component behaviour\n            domProps[prop] = value;\n          }\n        } else {\n          domProps[`aria-${prop}`] = value;\n        }\n      }\n    }\n  }\n\n  // accessibilityValue\n  if (accessibilityValue != null) {\n    for (const prop in accessibilityValue) {\n      const value = accessibilityValue[prop];\n      if (value != null) {\n        domProps[`aria-value${prop}`] = value;\n      }\n    }\n  }\n\n  // legacy fallbacks\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n    domProps.disabled = true;\n  }\n\n  // FOCUS\n  // Assume that 'link' is focusable by default (uses <a>).\n  // Assume that 'button' is not (uses <div role='button'>) but must be treated as such.\n  const focusable =\n    !disabled &&\n    importantForAccessibility !== 'no' &&\n    importantForAccessibility !== 'no-hide-descendants';\n  if (isNativeInteractiveElement) {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (role === 'button' || role === 'menuitem' || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  }\n\n  // STYLE\n  const reactNativeStyle = StyleSheet.compose(\n    pointerEvents && pointerEventsStyles[pointerEvents],\n    providedStyle\n  );\n\n  // Additional style resets for interactive elements\n  const needsCursor = (role === 'button' || role === 'link') && !disabled;\n  const needsReset =\n    component === 'a' ||\n    component === 'button' ||\n    component === 'li' ||\n    component === 'ul' ||\n    role === 'heading';\n  // Classic CSS styles\n  const finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList];\n\n  // Resolve styles\n  const { className, style } = styleResolver.resolve(reactNativeStyle, finalClassList);\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  }\n\n  // OTHER\n  // Native element ID\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  }\n\n  // Link security\n  // https://mathiasbynens.github.io/rel-noopener/\n  // Note: using \"noreferrer\" doesn't impact referrer tracking for https\n  // transfers (i.e., from https to https).\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = `${domProps.rel || ''} noopener noreferrer`;\n  }\n  // Automated test IDs\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n\n  // Keyboard accessibility\n  // Button-like roles should trigger 'onClick' if SPACE key is pressed.\n  // Button-like roles should not trigger 'onClick' if they are disabled.\n  if (domProps['data-focusable']) {\n    const onClick = domProps.onClick;\n    if (onClick != null) {\n      if (disabled) {\n        // Prevent click propagating if the element is disabled. See #1757\n        domProps.onClick = function(e) {\n          e.stopPropagation();\n        };\n      } else if (!isNativeInteractiveElement) {\n        // For native elements that are focusable but don't dispatch 'click' events\n        // for keyboards.\n        const onKeyDown = domProps.onKeyDown;\n        domProps.onKeyDown = function(e) {\n          const { key, repeat } = e;\n          const isSpacebarKey = key === ' ' || key === 'Spacebar';\n          const isButtonRole = role === 'button' || role === 'menuitem';\n          if (onKeyDown != null) {\n            onKeyDown(e);\n          }\n          if (!repeat && key === 'Enter') {\n            onClick(e);\n          } else if (isSpacebarKey && isButtonRole) {\n            if (!repeat) {\n              onClick(e);\n            }\n            // Prevent spacebar scrolling the window\n            e.preventDefault();\n          }\n        };\n      }\n    }\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;\n"],"mappings":";AASA,OAAOA,iBAAiB;AACxB,OAAOC,GAAG;AACV,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,SAASC,YAAY;AAErB,IAAMC,WAAW,GAAG,CAAC,CAAC;AACtB,IAAMC,cAAc,GAAGC,MAAM,CAACC,SAAS,CAACF,cAAc;AAGtD,IAAMG,OAAO,GAAGR,GAAG,CAACS,MAAM,CACxB;EACEC,KAAK,EAAE;IACLC,eAAe,EAAE,aAAa;IAC9BC,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAE,SAAS;IACfC,SAAS,EAAE,MAAM;IACjBC,MAAM,EAAE,CAAC;IACTC,SAAS,EAAE,SAAS;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDC,MAAM,EAAE;IACNA,MAAM,EAAE;EACV;AACF,CAAC,EACDf,YAAY,CAACgB,YACf,CAAC;AAED,IAAMC,mBAAmB,GAAGnB,UAAU,CAACQ,MAAM,CAAC;EAC5CY,IAAI,EAAE;IACJC,aAAa,EAAE;EACjB,CAAC;EACD,UAAU,EAAE;IACVA,aAAa,EAAE;EACjB,CAAC;EACD,UAAU,EAAE;IACVA,aAAa,EAAE;EACjB,CAAC;EACDC,IAAI,EAAE;IACJD,aAAa,EAAE;EACjB;AACF,CAAC,CAAC;AAEF,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,SAAS,EAAEC,KAAK,EAAK;EAC3C,IAAI,CAACA,KAAK,EAAE;IACVA,KAAK,GAAGtB,WAAW;EACrB;EAAC,IAAAuB,MAAA,GAoBGD,KAAK;IAjBPE,kBAAkB,GAAAD,MAAA,CAAlBC,kBAAkB;IAClBC,uBAAuB,GAAAF,MAAA,CAAvBE,uBAAuB;IACvBC,kBAAkB,GAAAH,MAAA,CAAlBG,kBAAkB;IAClBC,kBAAkB,GAAAJ,MAAA,CAAlBI,kBAAkB;IAClBC,UAAU,GAAAL,MAAA,CAAVK,UAAU;IACVC,SAAS,GAAAN,MAAA,CAATM,SAAS;IACTC,OAAO,GAAAP,MAAA,CAAPO,OAAO;IACGC,gBAAgB,GAAAR,MAAA,CAA1BS,QAAQ;IACRC,yBAAyB,GAAAV,MAAA,CAAzBU,yBAAyB;IACzBC,QAAQ,GAAAX,MAAA,CAARW,QAAQ;IACRhB,aAAa,GAAAK,MAAA,CAAbL,aAAa;IACNiB,aAAa,GAAAZ,MAAA,CAApBa,KAAK;IACLC,MAAM,GAAAd,MAAA,CAANc,MAAM;IAENC,iBAAiB,GAAAf,MAAA,CAAjBe,iBAAiB;IAEdC,QAAQ,GAAAC,wBAAA,CAAAjB,MAAA;EAGb,IAAMS,QAAQ,GACXN,kBAAkB,IAAI,IAAI,IAAIA,kBAAkB,CAACM,QAAQ,KAAK,IAAI,IAAKD,gBAAgB;EAC1F,IAAMU,IAAI,GAAG9C,iBAAiB,CAAC+C,eAAe,CAACpB,KAAK,CAAC;EACrD,IAAMqB,0BAA0B,GAC9BF,IAAI,KAAK,MAAM,IACfpB,SAAS,KAAK,GAAG,IACjBA,SAAS,KAAK,QAAQ,IACtBA,SAAS,KAAK,OAAO,IACrBA,SAAS,KAAK,QAAQ,IACtBA,SAAS,KAAK,UAAU,IACxBkB,QAAQ,CAACK,eAAe,IAAI,IAAI;EAGlC,IAAId,OAAO,IAAI,IAAI,EAAE;IACnB,KAAK,IAAMe,IAAI,IAAIf,OAAO,EAAE;MAC1B,IAAI7B,cAAc,CAAC6C,IAAI,CAAChB,OAAO,EAAEe,IAAI,CAAC,EAAE;QACtC,IAAME,KAAK,GAAGjB,OAAO,CAACe,IAAI,CAAC;QAC3B,IAAIE,KAAK,IAAI,IAAI,EAAE;UACjBR,QAAQ,WAASM,IAAI,CAAG,GAAGE,KAAK;QAClC;MACF;IACF;EACF;EAGA,IAAIvB,kBAAkB,IAAI,IAAI,EAAE;IAC9Be,QAAQ,CAAC,YAAY,CAAC,GAAGf,kBAAkB;EAC7C;EAGA,IAAIC,uBAAuB,IAAI,IAAI,EAAE;IACnCc,QAAQ,CAAC,WAAW,CAAC,GAAGd,uBAAuB,KAAK,MAAM,GAAG,KAAK,GAAGA,uBAAuB;EAC9F;EAGA,IAAIgB,IAAI,IAAI,IAAI,EAAE;IAChBF,QAAQ,CAACE,IAAI,GAAGA,IAAI;EACtB;EAGA,IAAIf,kBAAkB,IAAI,IAAI,EAAE;IAC9B,KAAK,IAAMmB,KAAI,IAAInB,kBAAkB,EAAE;MACrC,IAAMqB,MAAK,GAAGrB,kBAAkB,CAACmB,KAAI,CAAC;MACtC,IAAIE,MAAK,IAAI,IAAI,EAAE;QACjB,IAAIF,KAAI,KAAK,UAAU,IAAIA,KAAI,KAAK,QAAQ,EAAE;UAC5C,IAAIE,MAAK,KAAK,IAAI,EAAE;YAClBR,QAAQ,WAASM,KAAI,CAAG,GAAGE,MAAK;YAEhCR,QAAQ,CAACM,KAAI,CAAC,GAAGE,MAAK;UACxB;QACF,CAAC,MAAM;UACLR,QAAQ,WAASM,KAAI,CAAG,GAAGE,MAAK;QAClC;MACF;IACF;EACF;EAGA,IAAIpB,kBAAkB,IAAI,IAAI,EAAE;IAC9B,KAAK,IAAMkB,MAAI,IAAIlB,kBAAkB,EAAE;MACrC,IAAMoB,OAAK,GAAGpB,kBAAkB,CAACkB,MAAI,CAAC;MACtC,IAAIE,OAAK,IAAI,IAAI,EAAE;QACjBR,QAAQ,gBAAcM,MAAI,CAAG,GAAGE,OAAK;MACvC;IACF;EACF;EAGA,IAAId,yBAAyB,KAAK,qBAAqB,EAAE;IACvDM,QAAQ,CAAC,aAAa,CAAC,GAAG,IAAI;EAChC;EACA,IAAIP,QAAQ,KAAK,IAAI,EAAE;IACrBO,QAAQ,CAAC,eAAe,CAAC,GAAG,IAAI;IAChCA,QAAQ,CAACP,QAAQ,GAAG,IAAI;EAC1B;EAKA,IAAMgB,SAAS,GACb,CAAChB,QAAQ,IACTC,yBAAyB,KAAK,IAAI,IAClCA,yBAAyB,KAAK,qBAAqB;EACrD,IAAIU,0BAA0B,EAAE;IAC9B,IAAIf,UAAU,KAAK,KAAK,IAAI,CAACoB,SAAS,EAAE;MACtCT,QAAQ,CAACU,QAAQ,GAAG,IAAI;IAC1B,CAAC,MAAM;MACLV,QAAQ,CAAC,gBAAgB,CAAC,GAAG,IAAI;IACnC;EACF,CAAC,MAAM,IAAIE,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,SAAS,EAAE;IACzE,IAAIb,UAAU,KAAK,KAAK,IAAIoB,SAAS,EAAE;MACrCT,QAAQ,CAAC,gBAAgB,CAAC,GAAG,IAAI;MACjCA,QAAQ,CAACU,QAAQ,GAAG,GAAG;IACzB;EACF,CAAC,MAAM;IACL,IAAIrB,UAAU,KAAK,IAAI,IAAIoB,SAAS,EAAE;MACpCT,QAAQ,CAAC,gBAAgB,CAAC,GAAG,IAAI;MACjCA,QAAQ,CAACU,QAAQ,GAAG,GAAG;IACzB;EACF;EAGA,IAAMC,gBAAgB,GAAGrD,UAAU,CAACsD,OAAO,CACzCjC,aAAa,IAAIF,mBAAmB,CAACE,aAAa,CAAC,EACnDiB,aACF,CAAC;EAGD,IAAMiB,WAAW,GAAG,CAACX,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,MAAM,KAAK,CAACT,QAAQ;EACvE,IAAMqB,UAAU,GACdhC,SAAS,KAAK,GAAG,IACjBA,SAAS,KAAK,QAAQ,IACtBA,SAAS,KAAK,IAAI,IAClBA,SAAS,KAAK,IAAI,IAClBoB,IAAI,KAAK,SAAS;EAEpB,IAAMa,cAAc,GAAG,CAACD,UAAU,IAAIjD,OAAO,CAACE,KAAK,EAAE8C,WAAW,IAAIhD,OAAO,CAACU,MAAM,EAAEe,SAAS,CAAC;EAAC,IAAA0B,qBAAA,GAGlEzD,aAAa,CAAC0D,OAAO,CAACN,gBAAgB,EAAEI,cAAc,CAAC;IAA5EG,SAAS,GAAAF,qBAAA,CAATE,SAAS;IAAErB,KAAK,GAAAmB,qBAAA,CAALnB,KAAK;EAExB,IAAIqB,SAAS,IAAI,IAAI,IAAIA,SAAS,KAAK,EAAE,EAAE;IACzClB,QAAQ,CAACkB,SAAS,GAAGA,SAAS;EAChC;EAEA,IAAIrB,KAAK,EAAE;IACTG,QAAQ,CAACH,KAAK,GAAGA,KAAK;EACxB;EAIA,IAAIF,QAAQ,IAAI,IAAI,EAAE;IACpBK,QAAQ,CAACmB,EAAE,GAAGxB,QAAQ;EACxB;EAMA,IAAIb,SAAS,KAAK,GAAG,IAAIkB,QAAQ,CAACoB,MAAM,KAAK,QAAQ,EAAE;IACrDpB,QAAQ,CAACqB,GAAG,IAAMrB,QAAQ,CAACqB,GAAG,IAAI,EAAE,0BAAsB;EAC5D;EAEA,IAAIvB,MAAM,IAAI,IAAI,EAAE;IAClBE,QAAQ,CAAC,aAAa,CAAC,GAAGF,MAAM;EAClC;EAKA,IAAIE,QAAQ,CAAC,gBAAgB,CAAC,EAAE;IAC9B,IAAMsB,OAAO,GAAGtB,QAAQ,CAACsB,OAAO;IAChC,IAAIA,OAAO,IAAI,IAAI,EAAE;MACnB,IAAI7B,QAAQ,EAAE;QAEZO,QAAQ,CAACsB,OAAO,GAAG,UAASC,CAAC,EAAE;UAC7BA,CAAC,CAACC,eAAe,CAAC,CAAC;QACrB,CAAC;MACH,CAAC,MAAM,IAAI,CAACpB,0BAA0B,EAAE;QAGtC,IAAMqB,SAAS,GAAGzB,QAAQ,CAACyB,SAAS;QACpCzB,QAAQ,CAACyB,SAAS,GAAG,UAASF,CAAC,EAAE;UAAA,IACvBG,GAAG,GAAaH,CAAC,CAAjBG,GAAG;YAAEC,MAAM,GAAKJ,CAAC,CAAZI,MAAM;UACnB,IAAMC,aAAa,GAAGF,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,UAAU;UACvD,IAAMG,YAAY,GAAG3B,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,UAAU;UAC7D,IAAIuB,SAAS,IAAI,IAAI,EAAE;YACrBA,SAAS,CAACF,CAAC,CAAC;UACd;UACA,IAAI,CAACI,MAAM,IAAID,GAAG,KAAK,OAAO,EAAE;YAC9BJ,OAAO,CAACC,CAAC,CAAC;UACZ,CAAC,MAAM,IAAIK,aAAa,IAAIC,YAAY,EAAE;YACxC,IAAI,CAACF,MAAM,EAAE;cACXL,OAAO,CAACC,CAAC,CAAC;YACZ;YAEAA,CAAC,CAACO,cAAc,CAAC,CAAC;UACpB;QACF,CAAC;MACH;IACF;EACF;EAEA,OAAO9B,QAAQ;AACjB,CAAC;AAED,eAAenB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}