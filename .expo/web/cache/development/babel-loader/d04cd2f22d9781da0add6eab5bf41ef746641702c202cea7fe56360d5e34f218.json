{"ast":null,"code":"import normalizeColor from \"../../modules/normalizeColor\";\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n    shadowOffset = style.shadowOffset,\n    shadowOpacity = style.shadowOpacity,\n    shadowRadius = style.shadowRadius;\n  var _ref = shadowOffset || defaultOffset,\n    height = _ref.height,\n    width = _ref.width;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\nexport default resolveShadowValue;","map":{"version":3,"names":["normalizeColor","normalizeValueWithProperty","defaultOffset","height","width","resolveShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","_ref","offsetX","offsetY","blurRadius","color"],"sources":["C:/Users/adamk/Downloads/kasino9/node_modules/react-native-web/src/exports/StyleSheet/resolveShadowValue.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport normalizeColor from '../../modules/normalizeColor';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\n\nconst defaultOffset = { height: 0, width: 0 };\n\nconst resolveShadowValue = (style: Object) => {\n  const { shadowColor, shadowOffset, shadowOpacity, shadowRadius } = style;\n  const { height, width } = shadowOffset || defaultOffset;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  const color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\nexport default resolveShadowValue;\n"],"mappings":"AASA,OAAOA,cAAc;AACrB,OAAOC,0BAA0B;AAEjC,IAAMC,aAAa,GAAG;EAAEC,MAAM,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAE,CAAC;AAE7C,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,KAAa,EAAK;EAAA,IACpCC,WAAW,GAAgDD,KAAK,CAAhEC,WAAW;IAAEC,YAAY,GAAkCF,KAAK,CAAnDE,YAAY;IAAEC,aAAa,GAAmBH,KAAK,CAArCG,aAAa;IAAEC,YAAY,GAAKJ,KAAK,CAAtBI,YAAY;EAAA,IAAAC,IAAA,GACpCH,YAAY,IAAIN,aAAa;IAA/CC,MAAM,GAAAQ,IAAA,CAANR,MAAM;IAAEC,KAAK,GAAAO,IAAA,CAALP,KAAK;EACrB,IAAMQ,OAAO,GAAGX,0BAA0B,CAACG,KAAK,CAAC;EACjD,IAAMS,OAAO,GAAGZ,0BAA0B,CAACE,MAAM,CAAC;EAClD,IAAMW,UAAU,GAAGb,0BAA0B,CAACS,YAAY,IAAI,CAAC,CAAC;EAChE,IAAMK,KAAK,GAAGf,cAAc,CAACO,WAAW,IAAI,OAAO,EAAEE,aAAa,CAAC;EACnE,IAAIM,KAAK,IAAI,IAAI,IAAIH,OAAO,IAAI,IAAI,IAAIC,OAAO,IAAI,IAAI,IAAIC,UAAU,IAAI,IAAI,EAAE;IAC7E,OAAUF,OAAO,SAAIC,OAAO,SAAIC,UAAU,SAAIC,KAAK;EACrD;AACF,CAAC;AAED,eAAeV,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}